{"file_contents":{"README.md":{"content":"# Big Lou's Bakery – Next.js + Square + Sanity Starter\n\nThis is a minimal starter that pulls **products from Square**, creates **Square Payment Links** for checkout,\nand leaves room for **Sanity**-powered content pages.\n\n## Quick start\n1) `cp .env.example .env.local` and fill values:\n- `SQUARE_ACCESS_TOKEN` (Sandbox for testing)\n- `SQUARE_LOCATION_ID`\n- `NEXT_PUBLIC_BASE_URL=http://localhost:3000`\n- (Optional) `SANITY_PROJECT_ID` + `SANITY_DATASET`\n\n2) `npm install`\n3) `npm run dev`\n\n## Square setup\n- Add products in **Square Dashboard → Items**. Variations/prices appear automatically.\n- Shipping & Local Pickup are configured in Square. The checkout page will handle addresses.\n- The product page includes a \"Pickup note\" field (stored on the line item).\n\n## Sanity (optional)\n- If you want editable About/FAQ/Hours, run `npm create sanity@latest` and add your schemas.\n- Put credentials in `.env.local` and query with `lib/sanity.ts`.\n\n### Example Sanity Schemas\nAdd these in your Sanity Studio (e.g., `schemas/page.ts` and `schemas/faqItem.ts`) and include them in your schema export.\n\npage.ts\n```ts\nexport default {\n  name: 'page',\n  title: 'Page',\n  type: 'document',\n  fields: [\n    { name: 'title', type: 'string', validation: (r: any) => r.required() },\n    { name: 'slug', type: 'slug', options: { source: 'title' } },\n    { name: 'content', type: 'text' },\n    { name: 'image', type: 'image', options: { hotspot: true } },\n  ],\n};\n```\n\nfaqItem.ts\n```ts\nexport default {\n  name: 'faqItem',\n  title: 'FAQ Item',\n  type: 'document',\n  fields: [\n    { name: 'order', type: 'number' },\n    { name: 'question', type: 'string', validation: (r: any) => r.required() },\n    { name: 'answer', type: 'text' },\n  ],\n};\n```\n\nThis repo already includes optional pages that query Sanity if configured:\n- `app/about/page.tsx` – uses `getPage('about')` with a graceful fallback\n- `app/faq/page.tsx` – uses `getFaq()` with a graceful fallback\n- `app/thanks/page.tsx` – Square redirect target\n\nSet these env vars when using Sanity (public datasets recommended for read-only):\n- `SANITY_PROJECT_ID`\n- `SANITY_DATASET`\n\n### Sanity Health Check\n- Endpoint: `GET /api/sanityhealth` returns a small JSON diagnostic (no secrets).\n\n### Square Health Check\n- Endpoint: `GET /api/squarehealth` validates env vars and attempts a minimal API call\n  - Shows if access token is present, selected environment (sandbox/production), and whether a fetch succeeds.\n  - Also returns number of locations and a sample catalog item id if available.\n\n## Colors (pulled from logo)\n- brand: #12332e\n- accent: #cac2b0\n- cream:  #e9e7e2\n- ink:    #1f2937\n\nAdjust or add shades in `tailwind.config.js`.\n","size_bytes":2683},"next-env.d.ts":{"content":"/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/basic-features/typescript for more information.\n","size_bytes":201},"next.config.js":{"content":"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  images: {\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'items-images-sandbox.s3.us-west-2.amazonaws.com',\n        pathname: '/**',\n      },\n      {\n        protocol: 'https',\n        hostname: 'images.unsplash.com',\n        pathname: '/**',\n      },\n    ],\n  },\n  // Configure for Replit environment - allow all hosts for proxy\n  async headers() {\n    return [\n      {\n        source: '/(.*)',\n        headers: [\n          {\n            key: 'Cache-Control',\n            value: 'no-cache, no-store, must-revalidate',\n          },\n        ],\n      },\n    ];\n  },\n  // Allow all hosts for Replit proxy\n  experimental: {\n    allowedRevalidateHeaderKeys: ['*'],\n  },\n};\n\nmodule.exports = nextConfig;","size_bytes":789},"postcss.config.js":{"content":"module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":82},"replit.md":{"content":"# Big Lou's Bakery - Next.js Project\n\n## Overview\nThis is a Next.js e-commerce application for Big Lou's Bakery that integrates with Square for payments and optionally uses Sanity CMS for content management. The project has been successfully configured for the Replit environment.\n\n## Project Architecture\n- **Frontend**: Next.js 14.2.5 with TypeScript\n- **Styling**: Tailwind CSS\n- **State Management**: Zustand\n- **Payment Processing**: Square API\n- **Content Management**: Sanity CMS (optional)\n- **Deployment**: Configured for Replit autoscale deployment\n\n## Recent Changes (Sep 06, 2025)\n- Imported project from GitHub\n- Installed all dependencies via npm\n- Configured Next.js for Replit environment with proxy compatibility\n- Set up environment variables with Replit-specific URLs\n- Configured development workflow to run on port 5000 with 0.0.0.0 host\n- Added cache control headers for proper iframe functionality\n- Configured deployment settings for production\n\n## Environment Configuration\nThe project uses environment variables for configuration:\n- Square API credentials (currently using placeholder values)\n- Sanity CMS configuration (optional)\n- Next.js public URL configured for Replit environment\n\n## Current Status\n- ✅ Dependencies installed\n- ✅ Next.js server running on port 5000\n- ✅ Frontend accessible through Replit preview\n- ✅ Deployment configuration complete\n- ⚠️ Square API credentials need to be configured for payment functionality\n- ⚠️ Sanity CMS credentials optional for content management\n\n## Next Steps for User\n1. Configure Square API credentials in environment variables for payment functionality\n2. Optionally set up Sanity CMS for content management\n3. Customize the bakery content and products as needed","size_bytes":1755},"tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\"./app/**/*.{js,ts,jsx,tsx}\", \"./components/**/*.{js,ts,jsx,tsx}\"],\n  theme: {\n    extend: {\n      colors: {\n        brand: \"#12332e\",   // deep green\n        accent: \"#cac2b0\",  // cookie tan\n        cream: \"#e9e7e2\",\n        ink: \"#1f2937\"\n      }\n    },\n  },\n  plugins: [],\n};","size_bytes":354},"types.ts":{"content":"export type Item = any;\n","size_bytes":24},"app/globals.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --bg: theme(colors.cream);\n  --fg: theme(colors.ink);\n}\n\nhtml, body { \n  scroll-behavior: smooth;\n  margin: 0;\n  padding: 0;\n}\n\nbody { \n  background: \n    linear-gradient(135deg, #f8f6f0 0%, #e8e5dc 25%, #f0ede4 50%, #e2ddd1 75%, #f5f3ed 100%),\n    radial-gradient(circle at 20% 50%, rgba(18, 51, 46, 0.05) 0%, transparent 50%),\n    radial-gradient(circle at 80% 20%, rgba(156, 149, 124, 0.08) 0%, transparent 50%),\n    radial-gradient(circle at 40% 80%, rgba(18, 51, 46, 0.03) 0%, transparent 50%);\n  background-attachment: fixed;\n  background-size: 100% 100%, 800px 800px, 600px 600px, 900px 900px;\n  color: var(--fg);\n  font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  position: relative;\n}\n\n/* Enhanced dynamic background overlay with subtle patterns */\nbody::before {\n  content: '';\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    linear-gradient(45deg, transparent 40%, rgba(18, 51, 46, 0.02) 50%, transparent 60%),\n    linear-gradient(-45deg, transparent 40%, rgba(156, 149, 124, 0.03) 50%, transparent 60%),\n    radial-gradient(400px circle at 30% 20%, rgba(18, 51, 46, 0.04) 0%, transparent 50%),\n    radial-gradient(300px circle at 70% 80%, rgba(156, 149, 124, 0.05) 0%, transparent 50%);\n  background-size: 200px 200px, 150px 150px, 400px 400px, 300px 300px;\n  animation: backgroundShift 20s ease-in-out infinite;\n  pointer-events: none;\n  z-index: 1;\n}\n\n/* Subtle background animation */\n@keyframes backgroundShift {\n  0%, 100% {\n    transform: translate(0, 0);\n    opacity: 1;\n  }\n  25% {\n    transform: translate(-10px, -5px);\n    opacity: 0.8;\n  }\n  50% {\n    transform: translate(5px, -10px);\n    opacity: 0.9;\n  }\n  75% {\n    transform: translate(-5px, 5px);\n    opacity: 0.85;\n  }\n}\n\n.container { \n  @apply max-w-7xl mx-auto px-4 lg:px-6; \n}\n\n.btn { \n  @apply inline-flex items-center justify-center rounded-xl px-6 py-3 font-semibold transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2; \n}\n\n.btn-brand { \n  @apply btn bg-gradient-to-r from-brand to-brand/90 text-white hover:from-brand/90 hover:to-brand shadow-lg hover:shadow-xl focus:ring-brand/50; \n}\n\n.card { \n  @apply bg-white/90 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 hover:shadow-xl transition-all duration-300; \n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #e9e7e2;\n}\n\n::-webkit-scrollbar-thumb {\n  background: rgba(18, 51, 46, 0.4);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: rgba(18, 51, 46, 0.6);\n}\n\n/* Custom selection */\n::selection {\n  background: rgba(18, 51, 46, 0.2);\n  color: #12332e;\n}\n\n/* Enhanced animations */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px) rotate(0deg);\n  }\n  50% {\n    transform: translateY(-20px) rotate(5deg);\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n\n@keyframes pulseRing {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.05);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes glow {\n  0%, 100% {\n    box-shadow: 0 0 20px rgba(18, 51, 46, 0.3);\n  }\n  50% {\n    box-shadow: 0 0 30px rgba(18, 51, 46, 0.6);\n  }\n}\n\n/* Enhanced utility classes */\n.animate-fade-in {\n  animation: fadeInUp 0.8s ease-out forwards;\n}\n\n.floating-particle {\n  animation: float 12s ease-in-out infinite;\n}\n\n.shimmer {\n  animation: shimmer 2s infinite;\n}\n\n.animate-pulse-ring {\n  animation: pulseRing 3s ease-in-out infinite;\n}\n\n.animate-glow {\n  animation: glow 2s ease-in-out infinite;\n}\n\n/* Hero specific animations */\n.hero-loading .hero-title {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n.hero-loaded .hero-title {\n  opacity: 1;\n  transform: translateY(0);\n  animation: slideInLeft 1s ease-out 0.2s forwards;\n}\n\n.hero-loading .hero-subtitle {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n.hero-loaded .hero-subtitle {\n  opacity: 1;\n  transform: translateY(0);\n  animation: slideInLeft 1s ease-out 0.4s forwards;\n}\n\n.hero-loading .hero-buttons {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n.hero-loaded .hero-buttons {\n  opacity: 1;\n  transform: translateY(0);\n  animation: slideInLeft 1s ease-out 0.6s forwards;\n}\n\n.hero-loading .hero-image {\n  opacity: 0;\n  transform: translateX(50px) scale(0.95);\n}\n\n.hero-loaded .hero-image {\n  opacity: 1;\n  transform: translateX(0) scale(1);\n  animation: slideInRight 1s ease-out 0.4s forwards;\n}\n\n/* Enhanced product card animations */\n.product-card-enhanced {\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.product-card-enhanced:hover {\n  transform: translateY(-8px) scale(1.02);\n}\n\n/* Enhanced button effects */\n.btn-enhanced {\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.btn-enhanced::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n  transition: left 0.6s;\n}\n\n.btn-enhanced:hover::before {\n  left: 100%;\n}\n\n/* Gradient text utility */\n.gradient-text {\n  @apply bg-gradient-to-r from-brand to-brand/80 bg-clip-text text-transparent;\n  line-height: 1.2;\n  padding-bottom: 0.15rem;\n  display: inline-block;\n}\n\n/* Modern glass effect */\n.glass {\n  @apply bg-white/10 backdrop-blur-md border border-white/20;\n}\n\n/* Enhanced glass morphism */\n.glass-card {\n  background: rgba(255, 255, 255, 0.15);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n/* Interactive hover glow */\n.hover-glow:hover {\n  box-shadow: 0 0 30px rgba(18, 51, 46, 0.3);\n  transition: box-shadow 0.3s ease;\n}\n","size_bytes":6323},"app/layout.tsx":{"content":"// app/layout.tsx\nimport './globals.css';\nimport type { Metadata } from 'next';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { quicksand, pacifico, raleway } from '@/lib/fonts';\n\nexport const metadata: Metadata = {\n  metadataBase: new URL('https://biglous-bakery.example.com'),\n  title: {\n    default: \"Big Lou's Bakery | Fresh-Baked Cookies, Custom Cakes & Artisan Treats\",\n    template: \"%s | Big Lou's Bakery\"\n  },\n  description: 'Discover Big Lou\\'s Bakery - your local destination for fresh-baked cookies, custom celebration cakes, artisan pies, and handcrafted treats. Baked daily with premium ingredients using traditional methods.',\n  keywords: ['bakery', 'fresh cookies', 'custom cakes', 'artisan bread', 'local bakery', 'handcrafted treats', 'birthday cakes', 'wedding cakes', 'pastries'],\n  authors: [{ name: \"Big Lou's Bakery\" }],\n  creator: \"Big Lou's Bakery\",\n  publisher: \"Big Lou's Bakery\",\n  robots: {\n    index: true,\n    follow: true,\n    googleBot: {\n      index: true,\n      follow: true,\n      'max-video-preview': -1,\n      'max-image-preview': 'large',\n      'max-snippet': -1,\n    },\n  },\n  openGraph: {\n    type: 'website',\n    siteName: \"Big Lou's Bakery\",\n    title: \"Big Lou's Bakery | Fresh-Baked Cookies, Custom Cakes & Artisan Treats\",\n    description: 'Discover Big Lou\\'s Bakery - your local destination for fresh-baked cookies, custom celebration cakes, artisan pies, and handcrafted treats. Baked daily with premium ingredients.',\n    url: 'https://biglous-bakery.example.com',\n    images: [\n      {\n        url: '/og-image.jpg',\n        width: 1200,\n        height: 630,\n        alt: \"Big Lou's Bakery - Fresh baked goods display\",\n      },\n    ],\n    locale: 'en_US',\n  },\n  twitter: {\n    card: 'summary_large_image',\n    title: \"Big Lou's Bakery | Fresh-Baked Cookies, Custom Cakes & Artisan Treats\",\n    description: 'Discover Big Lou\\'s Bakery - your local destination for fresh-baked cookies, custom celebration cakes, and handcrafted treats.',\n    images: ['/og-image.jpg'],\n    creator: '@biglousbakery',\n  },\n  icons: {\n    icon: '/favicon.ico',\n    shortcut: '/favicon-16x16.png',\n    apple: '/apple-touch-icon.png',\n  },\n  manifest: '/site.webmanifest',\n  verification: {\n    google: 'google-site-verification-code',\n    yandex: 'yandex-verification-code',\n    yahoo: 'yahoo-site-verification-code',\n  },\n  category: 'Food & Beverage',\n  alternates: {\n    canonical: 'https://biglous-bakery.example.com',\n  },\n};\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\" className={`${quicksand.className}`}>\n      <body className=\"min-h-screen flex flex-col bg-stone-100 text-stone-900 relative overflow-x-hidden\">\n        {/* Enhanced animated background elements with accent colors */}\n        <div className=\"fixed inset-0 pointer-events-none z-0\">\n          <div className=\"absolute top-20 left-10 w-64 h-64 bg-gradient-to-br from-brand/8 to-green-400/10 rounded-full blur-3xl floating-particle\"></div>\n          <div className=\"absolute top-96 right-20 w-96 h-96 bg-gradient-to-br from-emerald-200/10 to-brand/8 rounded-full blur-3xl floating-particle\" style={{animationDelay: '3s'}}></div>\n          <div className=\"absolute bottom-32 left-1/4 w-48 h-48 bg-gradient-to-br from-brand/10 to-teal-300/8 rounded-full blur-2xl floating-particle\" style={{animationDelay: '1.5s'}}></div>\n          <div className=\"absolute top-1/2 right-1/4 w-32 h-32 bg-gradient-to-br from-green-300/12 to-transparent rounded-full blur-xl floating-particle\" style={{animationDelay: '4s'}}></div>\n          <div className=\"absolute bottom-1/4 right-10 w-40 h-40 bg-gradient-to-br from-emerald-400/8 to-brand/6 rounded-full blur-2xl floating-particle\" style={{animationDelay: '2s'}}></div>\n        </div>\n\n        {/* Global nav once */}\n        <Navbar />\n\n        {/* Page content */}\n        <main className=\"flex-1 pb-4 relative z-10\">{children}</main>\n\n        {/* Global footer once */}\n        <Footer />\n      </body>\n    </html>\n  );\n}","size_bytes":4076},"app/page.tsx":{"content":"// app/page.tsx\nimport Hero from '@/components/Hero';\nimport ProductCard from '@/components/ProductCard';\nimport InstagramFeed from '@/components/InstagramFeed';\nimport NewsletterSignup from '@/components/NewsletterSignup';\nimport { headers } from 'next/headers';\n\ntype Product = {\n  id: string;\n  name: string;\n  description?: string;\n  price?: string | number | null;\n  currency?: string;\n  image?: string | null;\n};\n\nasync function fetchProducts(): Promise<{ items: Product[] }> {\n  // Build an absolute base URL from the request headers\n  const h = headers();\n  const host = h.get('x-forwarded-host') ?? h.get('host') ?? 'localhost:3000';\n  const proto =\n    h.get('x-forwarded-proto') ??\n    (host.includes('localhost') || host.startsWith('127.') ? 'http' : 'https');\n\n  const base = `${proto}://${host}`;\n\n  const res = await fetch(`${base}/api/products`, { cache: 'no-store' });\n  const text = await res.text();\n\n  try {\n    return JSON.parse(text);\n  } catch {\n    // Silently handle parsing errors in production\n    return { items: [] };\n  }\n}\n\n// (optional) ensure this page is always dynamic so it refetches on each request\nexport const dynamic = 'force-dynamic';\n\nexport default async function Page() {\n  const { items = [] } = await fetchProducts();\n\n  return (\n    <div>\n      <Hero />\n\n      <section className=\"container py-16\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold gradient-text mb-4\" style={{lineHeight: '1.2', paddingBottom: '0.25rem'}}>Featured Products</h2>\n          <p className=\"text-gray-600 max-w-2xl mx-auto text-lg\">\n            Discover our most popular handcrafted treats, baked fresh daily with love and the finest ingredients.\n          </p>\n        </div>\n\n        {items.length === 0 ? (\n          <div className=\"text-center py-16 animate-fade-in\">\n            <div className=\"w-24 h-24 mx-auto mb-6 bg-gradient-to-br from-accent/20 to-brand/10 rounded-full flex items-center justify-center group hover:scale-110 transition-all duration-300 animate-glow\">\n              <svg className=\"w-12 h-12 text-brand/60 group-hover:text-brand transition-colors duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n            </div>\n            <h3 className=\"text-2xl font-semibold gradient-text mb-4\">No products yet</h3>\n            <p className=\"text-gray-500 mb-8 max-w-md mx-auto text-lg leading-relaxed\">\n              Add items in your Square Sandbox and refresh to see your delicious products here.\n            </p>\n            <button \n              onClick={() => window.location.reload()} \n              className=\"btn btn-brand btn-enhanced hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300\"\n            >\n              <span className=\"flex items-center gap-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n                Refresh Products\n              </span>\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 lg:gap-8\">\n              {items.slice(0, 8).map((p, index) => (\n                <div \n                  key={p.id} \n                  className=\"animate-fade-in opacity-0\" \n                  style={{ \n                    animationDelay: `${index * 150}ms`,\n                    animationFillMode: 'forwards'\n                  }}\n                >\n                  <ProductCard product={p} />\n                </div>\n              ))}\n            </div>\n            \n            {items.length > 8 && (\n              <div className=\"text-center mt-12 animate-fade-in\" style={{animationDelay: '1s'}}>\n                <a href=\"/shop\" className=\"btn btn-brand btn-enhanced hover:shadow-2xl transform hover:-translate-y-1 hover:scale-105 transition-all duration-300 relative group\">\n                  <span className=\"flex items-center gap-2 relative z-10\">\n                    View All Products\n                    <svg className=\"w-5 h-5 group-hover:translate-x-1 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                    </svg>\n                  </span>\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-brand/80 to-brand scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left rounded-xl\"></div>\n                </a>\n              </div>\n            )}\n          </>\n        )}\n      </section>\n\n      <InstagramFeed />\n\n      <NewsletterSignup />\n\n      {/* Trust indicators section */}\n      <section className=\"container py-16\">\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-brand/10 to-brand/20 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n              <svg className=\"w-8 h-8 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <h3 className=\"font-semibold text-lg mb-2\">Fresh Daily</h3>\n            <p className=\"text-gray-600\">Baked fresh every morning with premium ingredients</p>\n          </div>\n          \n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-brand/10 to-brand/20 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n              <svg className=\"w-8 h-8 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n              </svg>\n            </div>\n            <h3 className=\"font-semibold text-lg mb-2\">Local Pickup</h3>\n            <p className=\"text-gray-600\">Convenient pickup available at our bakery location</p>\n          </div>\n          \n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-brand/10 to-brand/20 rounded-2xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n              <svg className=\"w-8 h-8 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\n              </svg>\n            </div>\n            <h3 className=\"font-semibold text-lg mb-2\">Custom Orders</h3>\n            <p className=\"text-gray-600\">Personalized cakes and treats for special occasions</p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":7405},"components/AddToCartClient.tsx":{"content":"'use client';\n\nimport { useMemo, useState } from 'react';\nimport { useCart } from '@/store/cart';\n\ntype Variation = {\n  id: string;\n  name?: string;\n  price?: number | string | null;\n  currency?: string;\n};\n\ntype Product = {\n  id: string;\n  name: string;\n  description?: string;\n  price?: number | string | null;\n  currency?: string;\n  image?: string | null;\n  variations?: Variation[];\n};\n\n// normalize price to a number every time\nfunction coercePrice(p?: number | string | null): number {\n  if (typeof p === 'number') return p;\n  if (typeof p === 'string') {\n    const n = parseFloat(p);\n    return Number.isFinite(n) ? n : 0;\n  }\n  return 0;\n}\n\nexport default function AddToCartClient({\n  product,\n  variations,\n}: {\n  product: Product;\n  variations?: Variation[]; // ← optional\n}) {\n  const add = useCart((s) => s.add);\n\n  // If no variations provided, synthesize one from the product price\n  const options = useMemo<Variation[]>(\n    () =>\n      (variations && variations.length > 0\n        ? variations\n        : [\n            {\n              id: product.id,\n              name: 'Default',\n              price: product.price,\n              currency: product.currency ?? 'USD',\n            },\n          ]) as Variation[],\n    [variations, product.id, product.price, product.currency]\n  );\n\n  const [variationId, setVariationId] = useState<string>(options[0]?.id ?? product.id);\n  const [qty, setQty] = useState(1);\n\n  const selected =\n    options.find((v) => v.id === variationId) ?? options[0];\n\n  const unitPrice = coercePrice(selected?.price ?? product.price);\n  const currency = selected?.currency ?? product.currency ?? 'USD';\n\n  function handleAdd() {\n    add({\n      id: `${product.id}:${selected?.id ?? product.id}`,\n      name:\n        product.name +\n        (selected?.name && selected.name !== 'Default' ? ` — ${selected.name}` : ''),\n      price: unitPrice, // ← always a number\n      qty,\n    });\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {options.length > 1 && (\n        <>\n          <label className=\"block text-sm\">Select option</label>\n          <select\n            value={variationId}\n            onChange={(e) => setVariationId(e.target.value)}\n            className=\"input w-full max-w-sm\"\n          >\n            {options.map((v) => (\n              <option key={v.id} value={v.id}>\n                {v.name ?? 'Default'} — {currency} {coercePrice(v.price).toFixed(2)}\n              </option>\n            ))}\n          </select>\n        </>\n      )}\n\n      <label className=\"block text-sm\">Quantity</label>\n      <input\n        type=\"number\"\n        min={1}\n        value={qty}\n        onChange={(e) => setQty(Math.max(1, Number(e.target.value) || 1))}\n        className=\"input w-24\"\n      />\n\n      <button type=\"button\" onClick={handleAdd} className=\"btn btn-brand\">\n        Add to Cart\n      </button>\n    </div>\n  );\n}","size_bytes":2867},"components/Footer.tsx":{"content":"export default function Footer() {\n  return (\n    <footer className=\"w-full bg-gradient-to-br from-green-800 to-green-900 text-white relative overflow-hidden\">\n      {/* Decorative background pattern */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-10 left-10 w-20 h-20 bg-white/20 rounded-full\"></div>\n        <div className=\"absolute bottom-10 right-20 w-16 h-16 bg-white/15 rounded-full\"></div>\n        <div className=\"absolute top-1/2 right-10 w-12 h-12 bg-white/10 rounded-full\"></div>\n      </div>\n      \n      <div className=\"container py-12 relative z-10\">\n        <div className=\"grid md:grid-cols-3 gap-8 mb-8\">\n          {/* Brand Section */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center text-white font-bold text-xl\">\n                BL\n              </div>\n              <h3 className=\"text-xl font-bold\">Big Lou&apos;s Bakery</h3>\n            </div>\n            <p className=\"text-white/80 leading-relaxed\">\n              Fresh-baked cookies, custom cakes, and delicious pies made with love and the finest ingredients.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div className=\"space-y-4\">\n            <h4 className=\"font-semibold text-lg\">Quick Links</h4>\n            <nav className=\"space-y-2\">\n              <a href=\"/shop\" className=\"block text-white/80 hover:text-white transition-colors duration-200\">Shop All Products</a>\n              <a href=\"/about\" className=\"block text-white/80 hover:text-white transition-colors duration-200\">About Us</a>\n              <a href=\"/faq\" className=\"block text-white/80 hover:text-white transition-colors duration-200\">FAQ</a>\n              <a href=\"/\" className=\"block text-white/80 hover:text-white transition-colors duration-200\">Home</a>\n            </nav>\n          </div>\n\n          {/* Contact Info */}\n          <div className=\"space-y-4\">\n            <h4 className=\"font-semibold text-lg\">Contact</h4>\n            <div className=\"space-y-3 text-white/80\">\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-5 h-5 text-green-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                <span>Austin, Texas</span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-5 h-5 text-green-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                <span>hello@biglous.example</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Social Media Section */}\n        <div className=\"border-t border-white/20 pt-8 mb-8\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between gap-6\">\n            <div>\n              <h4 className=\"font-semibold text-lg mb-4\">Follow Us</h4>\n              <div className=\"flex items-center gap-4\">\n                <a\n                  href=\"https://www.instagram.com/biglousbakery\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-200 group\"\n                >\n                  <svg className=\"w-5 h-5 group-hover:scale-110 transition-transform duration-200\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/>\n                  </svg>\n                  <span className=\"text-sm font-medium\">Instagram</span>\n                </a>\n                \n                <a\n                  href=\"https://www.tiktok.com/@biglousbakery\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-200 group\"\n                >\n                  <svg className=\"w-5 h-5 group-hover:scale-110 transition-transform duration-200\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M19.59 6.69a4.83 4.83 0 0 1-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 0 1-5.2 1.74 2.89 2.89 0 0 1 2.31-4.64 2.93 2.93 0 0 1 .88.13V9.4a6.84 6.84 0 0 0-.88-.05A6.33 6.33 0 0 0 5 20.1a6.34 6.34 0 0 0 10.86-4.43v-7a8.16 8.16 0 0 0 4.77 1.52v-3.4a4.85 4.85 0 0 1-1-.1z\"/>\n                  </svg>\n                  <span className=\"text-sm font-medium\">TikTok</span>\n                </a>\n              </div>\n            </div>\n\n            <div className=\"text-center md:text-right\">\n              <p className=\"text-white/70 mb-2\">Stay connected for updates</p>\n              <p className=\"text-white/60 text-sm\">Fresh content • Behind the scenes • Special offers</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Section */}\n        <div className=\"border-t border-white/20 pt-8 flex flex-col md:flex-row items-center justify-between gap-4\">\n          <p className=\"text-white/70\">© 2024 Big Lou&apos;s Bakery. All rights reserved.</p>\n          <div className=\"flex items-center gap-6 text-sm text-white/70\">\n            <span>Cookies • Cakes • Pies</span>\n            <span>•</span>\n            <span>Made with ❤️ locally</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":6949},"components/Hero.tsx":{"content":"'use client';\n\nimport Image from 'next/image';\nimport { pacifico } from '../lib/fonts';\nimport { useState, useEffect } from 'react';\n\nexport default function Hero() {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsLoaded(true);\n  }, []);\n\n  return (\n    <section className=\"container pt-10 pb-8 relative overflow-hidden\">\n      {/* Animated background particles */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className=\"floating-particle absolute top-20 left-10 w-4 h-4 bg-brand/20 rounded-full\"></div>\n        <div className=\"floating-particle absolute top-40 right-20 w-6 h-6 bg-accent/20 rounded-full\" style={{animationDelay: '2s'}}></div>\n        <div className=\"floating-particle absolute bottom-32 left-1/4 w-3 h-3 bg-brand/30 rounded-full\" style={{animationDelay: '4s'}}></div>\n        <div className=\"floating-particle absolute top-60 right-1/3 w-5 h-5 bg-accent/15 rounded-full\" style={{animationDelay: '1s'}}></div>\n      </div>\n\n      <div className={`card p-8 md:p-12 flex flex-col md:flex-row items-center gap-8 md:gap-12 bg-gradient-to-br from-white/95 via-green-50/30 to-emerald-50/40 backdrop-blur-sm border border-white/30 shadow-xl relative group transition-all duration-1000 ${isLoaded ? 'hero-loaded' : 'hero-loading'}`}>\n        <div className=\"flex-1 text-center md:text-left space-y-6\">\n          <div>\n            <h1 className={`${pacifico.className} text-4xl md:text-5xl lg:text-6xl text-brand mb-4 drop-shadow-sm hero-title`} style={{lineHeight: '1.2', paddingBottom: '0.5rem'}}>\n              Big Lou&apos;s Bakery\n            </h1>\n          </div>\n          \n          <div>\n            <p className=\"text-lg md:text-xl opacity-90 leading-relaxed max-w-lg hero-subtitle\" style={{paddingBottom: '0.25rem'}}>\n              Fresh-baked cookies, custom cakes, and delicious pies. Local pickup and nationwide shipping.\n            </p>\n          </div>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center md:justify-start hero-buttons\">\n            <a href=\"/shop\" className=\"btn btn-brand shadow-lg hover:shadow-2xl transform hover:-translate-y-1 hover:scale-105 transition-all duration-300 relative overflow-hidden group\">\n              <span className=\"relative z-10 flex items-center gap-2\">\n                <svg className=\"w-5 h-5 group-hover:rotate-12 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n                </svg>\n                Shop now\n              </span>\n              <div className=\"absolute inset-0 bg-gradient-to-r from-brand/80 to-brand scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left\"></div>\n            </a>\n            <a href=\"/about\" className=\"btn bg-white/80 backdrop-blur-sm border border-brand/20 hover:bg-white hover:border-brand/40 hover:shadow-xl hover:-translate-y-1 transition-all duration-300 relative overflow-hidden group\">\n              <span className=\"relative z-10 flex items-center gap-2\">\n                <svg className=\"w-5 h-5 group-hover:rotate-12 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                Learn more\n              </span>\n              <div className=\"absolute inset-0 bg-gradient-to-r from-brand/10 to-brand/20 scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-right\"></div>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"flex-1 relative w-full h-64 md:h-80 lg:h-96 hero-image\">\n          {/* Multiple layered effects */}\n          <div className=\"absolute inset-0 rounded-2xl overflow-hidden shadow-2xl group-hover:shadow-3xl transition-all duration-500\">\n            {/* Animated gradient overlay */}\n            <div className=\"absolute inset-0 bg-gradient-to-br from-black/5 via-transparent to-black/20 z-10 transition-all duration-500 group-hover:from-black/10 group-hover:to-black/30\"></div>\n            \n            {/* Dynamic glow effect */}\n            <div className=\"absolute inset-0 bg-gradient-to-t from-brand/10 via-transparent to-transparent z-20 opacity-50 group-hover:opacity-70 transition-all duration-500\"></div>\n            \n            {/* Animated border pulse */}\n            <div className=\"absolute inset-0 rounded-2xl ring-2 ring-brand/20 group-hover:ring-brand/40 transition-all duration-500 animate-pulse-ring\"></div>\n            \n            <Image\n              src=\"/chocolate-chunk-cookies.jpeg\"\n              alt=\"Fresh cookies from Big Lou's Bakery\"\n              fill\n              className=\"object-cover object-center group-hover:scale-110 transition-transform duration-700 ease-out\"\n              priority\n              sizes=\"(min-width:1024px) 40vw, (min-width:768px) 50vw, 90vw\"\n              style={{ objectFit: 'cover' }}\n            />\n            \n            {/* Floating badges */}\n            <div className=\"absolute top-4 left-4 bg-white/90 backdrop-blur-sm rounded-full px-4 py-2 text-sm font-semibold text-brand shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-500 transform translate-y-2 group-hover:translate-y-0\">\n              Fresh Daily 🍪\n            </div>\n            \n            {/* Shimmer effect on hover */}\n            <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500\">\n              <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent shimmer\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5909},"components/Navbar.tsx":{"content":"'use client';\n\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useCart } from '@/store/cart';\nimport { useState, useEffect } from 'react';\n\nexport default function Navbar() {\n  const count = useCart((s) => s.count);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <header className={`sticky top-0 z-50 transition-all duration-300 ${isScrolled ? 'bg-white/95 backdrop-blur-lg border-b border-accent/30 shadow-lg' : 'bg-white/90 backdrop-blur-md border-b border-accent/20 shadow-sm'}`}>\n      <div className=\"container mx-auto px-4 py-4 flex items-center justify-between gap-6\">\n        {/* Logo */}\n        <Link href=\"/\" className=\"flex items-center gap-3 group\">\n          <div className=\"w-10 h-10 bg-gradient-to-br from-brand to-brand/80 rounded-xl flex items-center justify-center text-white font-bold text-lg shadow-md\">\n            BL\n          </div>\n          <span className=\"text-xl font-bold bg-gradient-to-r from-brand to-brand/80 bg-clip-text text-transparent\">\n            Big Lou&apos;s Bakery\n          </span>\n        </Link>\n\n        {/* Enhanced Desktop Navigation */}\n        <nav className=\"hidden md:flex items-center gap-8 text-sm font-medium\">\n          {[\n            { href: '/shop', label: 'Shop', icon: 'M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z' },\n            { href: '/about', label: 'About', icon: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' },\n            { href: '/contact', label: 'Contact', icon: 'M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z' },\n            { href: '/faq', label: 'FAQ', icon: 'M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' }\n          ].map((item) => (\n            <Link \n              key={item.href}\n              href={item.href} \n              className=\"relative py-2 px-3 text-gray-700 hover:text-brand transition-all duration-300 group\"\n            >\n              <span className=\"relative z-10\">\n                {item.label}\n              </span>\n              \n              {/* Simple hover underline */}\n              <div className=\"absolute bottom-0 left-0 w-0 h-0.5 bg-brand group-hover:w-full transition-all duration-200\"></div>\n            </Link>\n          ))}\n        </nav>\n\n        {/* Mobile Menu Button */}\n        <button \n          className=\"md:hidden p-2 rounded-lg hover:bg-brand/10 transition-colors duration-200\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle mobile menu\"\n          aria-expanded={isMobileMenuOpen}\n        >\n          <svg className={`w-6 h-6 transition-transform duration-200 ${isMobileMenuOpen ? 'rotate-90' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={isMobileMenuOpen ? \"M6 18L18 6M6 6l12 12\" : \"M4 6h16M4 12h16M4 18h16\"} />\n          </svg>\n        </button>\n\n        {/* Cart Button */}\n        <Link href=\"/cart\" className=\"btn btn-brand relative group\" aria-label={`View cart with ${count} items`}>\n          <span className=\"flex items-center gap-2\">\n            <div className=\"relative\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17M17 13v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6\" />\n              </svg>\n              {count > 0 && (\n                <div className=\"absolute -top-2 -right-2 w-5 h-5 bg-accent rounded-full flex items-center justify-center text-xs font-bold text-white\">\n                  {count}\n                </div>\n              )}\n            </div>\n            <span className=\"hidden sm:inline\">Cart</span>\n            <span className=\"sm:hidden\">({count})</span>\n          </span>\n        </Link>\n      </div>\n\n      {/* Enhanced Mobile Menu */}\n      <div className={`md:hidden overflow-hidden transition-all duration-300 ${isMobileMenuOpen ? 'max-h-64 opacity-100' : 'max-h-0 opacity-0'}`}>\n        <div className=\"p-4 bg-white/95 backdrop-blur-lg border-t border-accent/20\">\n          <nav className=\"space-y-3\">\n            {[\n              { href: '/shop', label: 'Shop', icon: 'M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z' },\n              { href: '/about', label: 'About', icon: 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' },\n              { href: '/contact', label: 'Contact', icon: 'M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z' },\n              { href: '/faq', label: 'FAQ', icon: 'M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' }\n            ].map((item, index) => (\n              <Link \n                key={item.href}\n                href={item.href} \n                className=\"flex items-center gap-3 p-3 rounded-lg text-gray-700 hover:text-brand hover:bg-brand/5 transition-all duration-200 group\"\n                style={{animationDelay: `${index * 100}ms`}}\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                <svg className=\"w-5 h-5 group-hover:scale-110 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={item.icon} />\n                </svg>\n                {item.label}\n              </Link>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}","size_bytes":6070},"components/ProductCard.tsx":{"content":"'use client';\n\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useState } from 'react';\nimport { useCart } from '@/store/cart';\n\ntype Product = {\n  id: string;\n  name: string;\n  description?: string;\n  price?: number | string | null;\n  currency?: string;\n  image?: string | null;\n};\n\nfunction formatMoney(\n  v: number | string | null | undefined,\n  currency = 'USD'\n) {\n  const n =\n    typeof v === 'string' ? Number(v) : typeof v === 'number' ? v : 0;\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 2,\n  }).format(n);\n}\n\nexport default function ProductCard({ product }: { product: Product }) {\n  const [isHovered, setIsHovered] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const add = useCart((s) => s.add);\n  \n  const price =\n    typeof product.price === 'string'\n      ? Number(product.price)\n      : product.price ?? 0;\n\n  const handleAddToCart = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    setIsAdding(true);\n    \n    // Add to cart\n    add({\n      id: product.id,\n      name: product.name,\n      price: price,\n      currency: product.currency || 'USD',\n      qty: 1,\n      image: product.image,\n    });\n\n    // Brief animation feedback\n    setTimeout(() => setIsAdding(false), 600);\n  };\n\n  return (\n    <div \n      className=\"group relative rounded-2xl border border-accent/20 p-4 bg-white/80 backdrop-blur-sm shadow-md hover:shadow-2xl product-card-enhanced hover-glow overflow-hidden\"\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {/* Animated background gradient */}\n      <div className={`absolute inset-0 bg-gradient-to-br from-brand/5 via-transparent to-accent/10 opacity-0 group-hover:opacity-100 transition-all duration-500 rounded-2xl`}></div>\n      \n      {/* Shimmer effect */}\n      <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent shimmer rounded-2xl\"></div>\n      </div>\n\n      <div className=\"relative z-10\">\n        {/* Image and badges - clickable to product page */}\n        <Link href={`/products/${product.id}`} className=\"block\">\n          <div className=\"relative w-full aspect-square rounded-xl overflow-hidden bg-gradient-to-br from-cream/30 to-accent/20 mb-4 shadow-inner\">\n            {product.image ? (\n              <>\n                <Image\n                  src={product.image}\n                  alt={product.name || 'Product image'}\n                  fill\n                  className={`object-cover transition-all duration-700 ease-out ${imageLoaded ? 'scale-100 opacity-100' : 'scale-110 opacity-0'} group-hover:scale-110`}\n                  sizes=\"(min-width:1024px) 25vw, 50vw\"\n                  onLoad={() => setImageLoaded(true)}\n                  loading=\"lazy\"\n                  style={{ objectFit: 'cover' }}\n                />\n                \n                {/* Overlay effects */}\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300\"></div>\n                \n                {/* Animated corner accent */}\n                <div className=\"absolute top-0 right-0 w-16 h-16 bg-gradient-to-bl from-brand/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 -translate-y-2 group-hover:translate-x-0 group-hover:translate-y-0\"></div>\n              </>\n            ) : (\n              <div className=\"grid place-items-center h-full text-sm opacity-60 bg-gradient-to-br from-cream to-accent/30\">\n                <div className=\"text-center transform group-hover:scale-110 transition-transform duration-300\">\n                  <div className={`w-12 h-12 mx-auto mb-2 rounded-full flex items-center justify-center transition-all duration-300 ${isHovered ? 'bg-brand/40 animate-glow' : 'bg-accent/40'}`}>\n                    <svg className={`w-6 h-6 transition-all duration-300 ${isHovered ? 'text-white' : 'text-brand/60'}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <span className={`transition-colors duration-300 ${isHovered ? 'text-brand' : ''}`}>No image</span>\n                </div>\n              </div>\n            )}\n            \n            {/* Enhanced overlay badge with animation */}\n            <div className={`absolute top-3 right-3 bg-white/95 backdrop-blur-sm rounded-full px-3 py-1 text-xs font-semibold text-brand shadow-lg transition-all duration-300 ${isHovered ? 'opacity-100 scale-100 translate-y-0' : 'opacity-0 scale-95 -translate-y-2'}`}>\n              <span className=\"flex items-center gap-1\">\n                <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                </svg>\n                View Details\n              </span>\n            </div>\n\n            {/* Floating quality badge */}\n            <div className={`absolute bottom-3 left-3 bg-gradient-to-r from-brand to-brand/80 text-white text-xs px-2 py-1 rounded-full font-medium shadow-lg transition-all duration-300 ${isHovered ? 'opacity-100 scale-100 translate-y-0' : 'opacity-0 scale-95 translate-y-2'}`}>\n              Fresh Daily\n            </div>\n          </div>\n        </Link>\n\n        <div className=\"space-y-3\">\n          {/* Product name - clickable to product page */}\n          <Link href={`/products/${product.id}`}>\n            <h3 className={`font-semibold text-gray-900 line-clamp-1 transition-all duration-300 hover:text-brand cursor-pointer ${isHovered ? 'transform -translate-y-0.5' : ''}`}>\n              {product.name || 'Untitled'}\n            </h3>\n          </Link>\n          \n          <div className=\"flex items-center justify-between\">\n            <span className={`text-lg font-bold transition-all duration-300 ${isHovered ? 'text-brand scale-105' : 'text-brand/80'}`}>\n              {formatMoney(price, product.currency || 'USD')}\n            </span>\n            \n            {/* Add to Cart Button - NOT clickable to product page */}\n            <button\n              onClick={handleAddToCart}\n              disabled={isAdding}\n              aria-label={`Add ${product.name} to cart`}\n              className={`w-10 h-10 rounded-full flex items-center justify-center transition-all duration-200 cursor-pointer ${\n                isAdding \n                  ? 'bg-green-500 text-white' \n                  : 'bg-brand/10 text-brand hover:bg-brand hover:text-white'\n              }`}\n            >\n              {isAdding ? (\n                <svg className=\"w-5 h-5 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n              ) : (\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                </svg>\n              )}\n              \n              {/* Success ripple effect */}\n              {isAdding && (\n                <div className=\"absolute inset-0 bg-green-400 rounded-full animate-ping opacity-75\"></div>\n              )}\n            </button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8294},"components/ProductGrid.tsx":{"content":"'use client';\n\nimport { useEffect, useState } from 'react';\nimport Image from 'next/image';\n\ntype Product = {\n  id: string;\n  name: string;\n  description: string;\n  price: string;\n  currency: string;\n  image: string | null;\n};\n\nexport default function ProductGrid() {\n  const [products, setProducts] = useState<Product[]>([]);\n\n  useEffect(() => {\n    async function fetchProducts() {\n      const res = await fetch('/api/products');\n      const data = await res.json();\n      setProducts(data.items || []);\n    }\n    fetchProducts();\n  }, []);\n\n  return (\n    <section className=\"container py-12\">\n      <h2 className=\"text-3xl font-bold mb-8\">Shop</h2>\n      <div className=\"grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3\">\n        {products.map((p) => (\n          <div\n            key={p.id}\n            className=\"border rounded-2xl p-4 shadow hover:shadow-lg transition\"\n          >\n            {p.image && (\n              <div className=\"relative w-full h-48 mb-4\">\n                <Image\n                  src={p.image}\n                  alt={p.name}\n                  fill\n                  className=\"object-cover rounded-lg\"\n                />\n              </div>\n            )}\n            <h3 className=\"text-xl font-semibold\">{p.name}</h3>\n            {p.description && (\n              <p className=\"text-sm text-gray-600 mt-1\">{p.description}</p>\n            )}\n            <p className=\"mt-2 font-bold\">\n              ${p.price} {p.currency}\n            </p>\n            <button className=\"btn btn-brand mt-4 w-full\">\n              Add to Cart\n            </button>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}","size_bytes":1650},"lib/cms.ts":{"content":"import { sanity } from './sanity';\nimport groq from 'groq';\n\ntype Maybe<T> = T | null | undefined;\n\nfunction sanityDisabled() {\n  return !process.env.SANITY_PROJECT_ID || !process.env.SANITY_DATASET;\n}\n\nexport type CmsPage = {\n  title: string;\n  content?: string;\n  image?: string | null;\n};\n\nexport async function getPage(slug: string): Promise<Maybe<CmsPage>> {\n  if (sanityDisabled()) return null;\n\n  try {\n    const query = groq`*[_type == \"page\" && slug.current == $slug][0]{\n      title,\n      content,\n      \"image\": image.asset->url\n    }`;\n\n    const data = await sanity.fetch<CmsPage | null>(query, { slug });\n    return data ?? null;\n  } catch {\n    return null;\n  }\n}\n\nexport type FaqItem = { question: string; answer: string };\n\nexport async function getFaq(): Promise<FaqItem[]> {\n  if (sanityDisabled()) return [];\n\n  try {\n    const query = groq`*[_type == \"faqItem\"] | order(order asc){\n      question,\n      answer\n    }`;\n    const data = await sanity.fetch<FaqItem[]>(query);\n    return Array.isArray(data) ? data : [];\n  } catch {\n    return [];\n  }\n}\n\n","size_bytes":1074},"lib/fonts.ts":{"content":"// lib/fonts.ts\nimport { Pacifico, Quicksand, Raleway } from 'next/font/google';\n\nexport const quicksand = Quicksand({ subsets: ['latin'], weight: ['400', '600'] });\nexport const pacifico  = Pacifico({ subsets: ['latin'], weight: '400' });\nexport const raleway   = Raleway({ subsets: ['latin'], weight: ['400', '600', '700'] });","size_bytes":328},"lib/money.ts":{"content":"// lib/money.ts\nexport function formatMoney(\n    value?: number | string | null,\n    currency = 'USD'\n  ): string {\n    if (value == null || value === '') return '';\n    const amount =\n      typeof value === 'string' ? Number(value) : Number(value);\n    // value is \"12.00\" (dollars) from our API; show as-is with Intl\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: 2,\n    }).format(amount);\n  }","size_bytes":462},"lib/sanity.ts":{"content":"import { createClient } from '@sanity/client';\n\n// Normalize .env values (strip quotes/whitespace) and validate\nfunction normalize(v?: string | null) {\n  if (!v) return '';\n  const t = v.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n  return t;\n}\n\nconst projectId = normalize(process.env.SANITY_PROJECT_ID);\nconst dataset = normalize(process.env.SANITY_DATASET);\n\nconst idOk = /^[a-z0-9-]+$/.test(projectId);\nconst dsOk = /^[a-z0-9-]+$/.test(dataset);\n\nexport const isSanityEnabled = Boolean(projectId && dataset && idOk && dsOk);\n\nfunction stubClient() {\n  const err = new Error(\n    'Sanity disabled or misconfigured. Check SANITY_PROJECT_ID and SANITY_DATASET.'\n  );\n  return {\n    // Minimal surface used by this app\n    fetch: async () => {\n      throw err;\n    },\n  } as unknown as ReturnType<typeof createClient>;\n}\n\nexport const sanity = isSanityEnabled\n  ? createClient({\n      projectId,\n      dataset,\n      apiVersion: '2024-07-01',\n      useCdn: true,\n    })\n  : stubClient();\n","size_bytes":1004},"store/cart.ts":{"content":"'use client';\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\ntype CartItem = {\n  id: string;          // ui id, e.g. `${productId}:${variationId}`\n  productId?: string;\n  variationId?: string; // <-- add this line\n  name: string;\n  price: number;        // dollars\n  qty: number;\n  note?: string;\n  image?: string | null;\n  currency?: string;\n};\n\ntype CartState = {\n  items: CartItem[];\n  count: number;\n  add: (item: CartItem) => void;  // pass { qty: 1 } to increment, { qty: -1 } to decrement\n  remove: (id: string) => void;\n  clear: () => void;\n};\n\nexport const useCart = create<CartState>()(\n  persist(\n    (set, get) => ({\n      items: [],\n      count: 0,\n      add: (item) =>\n        set((state) => {\n          const existing = state.items.find((i) => i.id === item.id);\n          let next: CartItem[];\n\n          if (existing) {\n            const newQty = existing.qty + (item.qty ?? 1);\n            next =\n              newQty <= 0\n                ? state.items.filter((i) => i.id !== item.id)\n                : state.items.map((i) =>\n                    i.id === item.id ? { ...i, qty: newQty } : i\n                  );\n          } else {\n            next = [...state.items, { ...item, qty: item.qty ?? 1 }];\n          }\n\n          return { items: next, count: next.reduce((s, i) => s + i.qty, 0) };\n        }),\n      remove: (id) =>\n        set((state) => {\n          const next = state.items.filter((i) => i.id !== id);\n          return { items: next, count: next.reduce((s, i) => s + i.qty, 0) };\n        }),\n      clear: () => set({ items: [], count: 0 }),\n    }),\n    { name: 'big-lous-cart' }\n  )\n);","size_bytes":1649},"app/about/page.tsx":{"content":"import Image from 'next/image';\nimport { getPage } from '@/lib/cms';\n\nexport const dynamic = 'force-dynamic';\n\nexport default async function AboutPage() {\n  const cms = await getPage('about');\n\n  const title = cms?.title ?? \"About Big Lou's Bakery\";\n  const content =\n    cms?.content ??\n    \"We're a family-run bakery passionate about scratch-made cookies, custom cakes, and seasonal pies. Everything is baked fresh with simple ingredients and a whole lot of heart.\";\n  const image =\n    cms?.image ??\n    '/A50EBEF1-3C66-4DF6-A00B-F4031DF26BBC_4_5005_c.jpeg';\n\n  return (\n    <div className=\"pt-8\">\n      <section className=\"container py-16\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold gradient-text mb-6\" style={{lineHeight: '1.15', paddingBottom: '0.25rem'}}>{title}</h1>\n          <p className=\"text-gray-600 max-w-2xl mx-auto text-lg\">\n            Learn more about our story, our passion for baking, and what makes Big Lou's Bakery special.\n          </p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 gap-12 items-start mb-16\">\n          <div className=\"relative w-full aspect-[4/3] rounded-2xl overflow-hidden shadow-2xl group\">\n            <Image\n              src={image}\n              alt=\"Inside the bakery\"\n              fill\n              className=\"object-cover group-hover:scale-105 transition-transform duration-700\"\n              sizes=\"(min-width:1024px) 40vw, 90vw\"\n              priority\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent\"></div>\n          </div>\n\n          <div className=\"space-y-6\">\n            <div className=\"card p-8\">\n              <p className=\"text-gray-700 leading-relaxed text-lg whitespace-pre-line\">{content}</p>\n            </div>\n            \n            <div className=\"card p-6\">\n              <h3 className=\"font-semibold text-lg mb-4 text-brand\">Contact Info</h3>\n              <div className=\"space-y-3 text-gray-600\">\n                <div className=\"flex items-center gap-3\">\n                  <svg className=\"w-5 h-5 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                  <span><span className=\"font-semibold\">Location:</span> Austin, Texas</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <svg className=\"w-5 h-5 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                  </svg>\n                  <span><span className=\"font-semibold\">Email:</span> hello@biglous.example</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Call to action */}\n        <div className=\"text-center\">\n          <div className=\"card p-8 max-w-2xl mx-auto\">\n            <h3 className=\"text-2xl font-semibold mb-4 gradient-text\">Ready to try our treats?</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Browse our selection of fresh-baked goods or contact us for custom orders.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <a href=\"/shop\" className=\"btn btn-brand\">\n                Shop Now\n              </a>\n              <a href=\"/faq\" className=\"btn bg-white border border-brand/20 text-brand hover:bg-brand/5\">\n                View FAQ\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":4012},"app/cart/page.tsx":{"content":"'use client';\n\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useCart } from '@/store/cart';\n\nfunction fmt(amount: number, currency = 'USD') {\n  // Store uses dollars. If you switch to cents later, use amount/100 here.\n  return new Intl.NumberFormat('en-US', { style: 'currency', currency }).format(amount);\n}\n\nexport default function CartPage() {\n  const { items, add, remove, clear } = useCart();\n\n  const subtotal = (items ?? []).reduce(\n    (sum, i) => sum + (i.price || 0) * (i.qty || 0),\n    0\n  );\n  const currency = items[0]?.currency ?? 'USD';\n\n  return (\n    <section className=\"container py-10\">\n      <h1 className=\"text-2xl font-bold mb-6\">Your Cart</h1>\n\n      {items.length === 0 ? (\n        <div>\n          <p>Your cart is empty.</p>\n          <Link href=\"/shop\" className=\"btn btn-brand mt-4\">Go to Shop</Link>\n        </div>\n      ) : (\n        <>\n          <ul className=\"space-y-4\">\n            {items.map((item) => (\n              <li key={item.id} className=\"flex items-center justify-between gap-4 border-b pb-3\">\n                <div className=\"flex items-center gap-3\">\n                  {item.image ? (\n                    <Image\n                      src={item.image}\n                      alt={item.name}\n                      width={56}\n                      height={56}\n                      className=\"rounded-md object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-14 h-14 rounded-md bg-neutral-200 grid place-items-center text-xs opacity-70\">\n                      No image\n                    </div>\n                  )}\n\n                  <div>\n                    <div className=\"font-medium\">{item.name}</div>\n                    <div className=\"text-sm opacity-70\">\n                      {fmt(item.price, item.currency)} × {item.qty}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center gap-3\">\n                  <button\n                    className=\"btn\"\n                    onClick={() => {\n                      if (item.qty > 1) add({ ...item, qty: -1 });\n                      else remove(item.id);\n                    }}\n                  >\n                    –\n                  </button>\n                  <span className=\"w-8 text-center\">{item.qty}</span>\n                  <button className=\"btn\" onClick={() => add({ ...item, qty: 1 })}>\n                    +\n                  </button>\n\n                  <button onClick={() => remove(item.id)} className=\"btn\">Remove</button>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"flex items-center justify-between mt-8\">\n            <button className=\"btn\" onClick={clear}>Clear Cart</button>\n\n            <div className=\"text-right\">\n              <div className=\"text-lg font-semibold\">\n                Subtotal: {fmt(subtotal, currency)}\n              </div>\n\n              {/* Placeholder checkout */}\n              <form\n  action=\"/api/checkout\"\n  method=\"post\"\n  onSubmit={(e) => {\n    // build the minimal payload for the API\n    const payload = JSON.stringify({\n      items: items.map((i) => ({\n        variationId: i.variationId ?? i.productId ?? i.id, // prefer variation id\n        qty: i.qty,\n        note: i.note,\n      })),\n    });\n    const input = document.createElement('input');\n    input.type = 'hidden';\n    input.name = 'payload';\n    input.value = payload;\n    e.currentTarget.appendChild(input);\n  }}\n>\n  <button className=\"btn btn-brand\" type=\"submit\">Checkout</button>\n</form>\n            </div>\n          </div>\n        </>\n      )}\n    </section>\n  );\n}","size_bytes":3679},"app/faq/page.tsx":{"content":"import { getFaq } from '@/lib/cms';\n\nexport const dynamic = 'force-dynamic';\n\nexport default async function FaqPage() {\n  const cmsFaq = await getFaq();\n  const faq = cmsFaq.length\n    ? cmsFaq\n    : [\n        {\n          question: 'Do you offer local pickup?',\n          answer:\n            'Yes! Choose local pickup during Square checkout when available. You can also leave a pickup note on the product page.',\n        },\n        {\n          question: 'Do you ship nationwide?',\n          answer:\n            'We ship select items (like cookies) to most U.S. states. Shipping rates and options appear during checkout.',\n        },\n        {\n          question: 'Do you make custom cakes?',\n          answer:\n            'Absolutely. Send us a message with your theme, size, and date. We will confirm availability and a quote.',\n        },\n      ];\n\n  return (\n    <div className=\"pt-8\">\n      <section className=\"container py-16\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold gradient-text mb-6\">Frequently Asked Questions</h1>\n          <p className=\"text-gray-600 max-w-2xl mx-auto text-lg\">\n            Got questions? We have got answers! Find everything you need to know about our bakery, \n            orders, and services.\n          </p>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto space-y-6 mb-16\">\n          {faq.map((f, i) => (\n            <div key={i} className=\"card p-6 hover:shadow-xl transition-all duration-300 group\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"w-8 h-8 bg-gradient-to-br from-brand/10 to-brand/20 rounded-full flex items-center justify-center flex-shrink-0 group-hover:scale-110 transition-transform duration-200\">\n                  <svg className=\"w-4 h-4 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-lg mb-3 text-gray-900 group-hover:text-brand transition-colors duration-200\">\n                    {f.question}\n                  </h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{f.answer}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Contact section */}\n        <div className=\"text-center\">\n          <div className=\"card p-8 max-w-2xl mx-auto\">\n            <h3 className=\"text-2xl font-semibold mb-4 gradient-text\">Still have questions?</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Cannot find what you are looking for? We are here to help! Contact us directly \n              and we will get back to you as soon as possible.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <a href=\"/about\" className=\"btn btn-brand\">\n                Contact Us\n              </a>\n              <a href=\"/shop\" className=\"btn bg-white border border-brand/20 text-brand hover:bg-brand/5\">\n                Browse Products\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":3440},"app/shop/page.tsx":{"content":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport ProductCard from '@/components/ProductCard';\nimport ProductFilter from '@/components/ProductFilter';\n\ntype Product = {\n  id: string;\n  name: string;\n  description?: string;\n  price?: number | string | null;\n  currency?: string;\n  image?: string | null;\n};\n\n// Smart categorization based on product names\nfunction categorizeProduct(product: Product): string {\n  const name = product.name.toLowerCase();\n  const description = product.description?.toLowerCase() || '';\n  const text = `${name} ${description}`;\n\n  if (text.includes('cookie') || text.includes('biscuit')) return 'Cookies';\n  if (text.includes('cake') || text.includes('cupcake')) return 'Cakes';\n  if (text.includes('muffin')) return 'Muffins';\n  if (text.includes('bread') || text.includes('loaf')) return 'Breads';\n  if (text.includes('pie') || text.includes('tart')) return 'Pies & Tarts';\n  if (text.includes('brownie') || text.includes('bar')) return 'Brownies & Bars';\n  if (text.includes('pastry') || text.includes('croissant') || text.includes('danish')) return 'Pastries';\n  if (text.includes('donut') || text.includes('doughnut')) return 'Donuts';\n  \n  return 'Other';\n}\n\nasync function fetchProducts(): Promise<{ items: Product[] }> {\n  try {\n    const res = await fetch('/api/products', { cache: 'no-store' });\n    if (!res.ok) return { items: [] };\n    return res.json();\n  } catch (error) {\n    console.error('Failed to fetch products:', error);\n    return { items: [] };\n  }\n}\n\nexport default function ShopPage() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n\n  useEffect(() => {\n    const loadProducts = async () => {\n      const { items } = await fetchProducts();\n      setProducts(items);\n      setLoading(false);\n    };\n    loadProducts();\n  }, []);\n\n  // Generate categories dynamically from products\n  const categories = ['All', ...Array.from(new Set(products.map(categorizeProduct))).sort()];\n  \n  // Filter products based on selected category\n  const filteredProducts = selectedCategory === 'All' \n    ? products \n    : products.filter(product => categorizeProduct(product) === selectedCategory);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen pt-8\">\n        <section className=\"container py-16\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold gradient-text mb-6\" style={{lineHeight: '1.2', paddingBottom: '0.25rem'}}>Our Bakery</h1>\n            <p className=\"text-gray-600 max-w-3xl mx-auto text-lg leading-relaxed\">\n              Loading our delicious collection...\n            </p>\n          </div>\n          \n          {/* Loading skeletons */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 lg:gap-8\">\n            {[...Array(8)].map((_, i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"bg-gray-200 aspect-square rounded-xl mb-4\"></div>\n                <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n              </div>\n            ))}\n          </div>\n        </section>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen pt-8\">\n      <section className=\"container py-16\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold gradient-text mb-6\" style={{lineHeight: '1.2', paddingBottom: '0.25rem'}}>Our Bakery</h1>\n          <p className=\"text-gray-600 max-w-3xl mx-auto text-lg leading-relaxed\">\n            Explore our complete collection of handcrafted treats. From classic cookies to custom celebration cakes, \n            every item is made fresh daily with premium ingredients and traditional baking methods.\n          </p>\n        </div>\n\n        {products.length === 0 ? (\n          <div className=\"text-center py-20\">\n            <div className=\"w-32 h-32 mx-auto mb-8 bg-gradient-to-br from-accent/20 to-brand/10 rounded-2xl flex items-center justify-center\">\n              <svg className=\"w-16 h-16 text-brand/60\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-700 mb-4\">No Products Available</h2>\n            <p className=\"text-gray-500 mb-8 max-w-lg mx-auto\">\n              We're currently updating our product catalog. Please check back soon or contact us directly for special orders.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button onClick={() => window.location.reload()} className=\"btn btn-brand\">\n                Refresh Catalog\n              </button>\n              <a href=\"/contact\" className=\"btn bg-white border border-brand/20 text-brand hover:bg-brand/5\">\n                Contact Us\n              </a>\n            </div>\n          </div>\n        ) : (\n          <>\n            <ProductFilter \n              categories={categories}\n              selectedCategory={selectedCategory}\n              onCategoryChange={setSelectedCategory}\n              productCount={filteredProducts.length}\n            />\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 lg:gap-8\">\n              {filteredProducts.map((product, index) => (\n                <div \n                  key={product.id} \n                  className=\"animate-fade-in\" \n                  style={{ animationDelay: `${index * 75}ms` }}\n                >\n                  <ProductCard product={product} />\n                </div>\n              ))}\n            </div>\n\n            {filteredProducts.length === 0 && selectedCategory !== 'All' && (\n              <div className=\"text-center py-16\">\n                <div className=\"w-24 h-24 mx-auto mb-6 bg-gradient-to-br from-accent/20 to-brand/10 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-12 h-12 text-brand/60\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">No {selectedCategory} Found</h3>\n                <p className=\"text-gray-500 mb-6\">\n                  We don't have any {selectedCategory.toLowerCase()} available right now. \n                  Check back soon or try another category!\n                </p>\n                <button \n                  onClick={() => setSelectedCategory('All')}\n                  className=\"btn btn-brand\"\n                >\n                  View All Products\n                </button>\n              </div>\n            )}\n\n            {/* Call to action */}\n            <div className=\"mt-16 text-center\">\n              <div className=\"card p-8 max-w-2xl mx-auto\">\n                <h3 className=\"text-xl font-semibold mb-3\">Looking for something special?</h3>\n                <p className=\"text-gray-600 mb-6\">\n                  We create custom cakes and treats for birthdays, weddings, and special occasions. \n                  Contact us to discuss your perfect dessert!\n                </p>\n                <a href=\"/contact\" className=\"btn btn-brand\">\n                  Request Custom Order\n                </a>\n              </div>\n            </div>\n          </>\n        )}\n      </section>\n    </div>\n  );\n}","size_bytes":7923},"app/thanks/page.tsx":{"content":"export default function ThanksPage() {\n  return (\n    <section className=\"container py-16 text-center\">\n      <h1 className=\"text-3xl font-bold mb-2\">Thank you!</h1>\n      <p className=\"opacity-80\">Your order has been received. A receipt will be emailed shortly.</p>\n      <div className=\"mt-6\">\n        <a href=\"/shop\" className=\"btn\">Continue Shopping</a>\n      </div>\n    </section>\n  );\n}\n\n","size_bytes":394},"app/api/checkout/route.ts":{"content":"import { NextResponse } from 'next/server';\n\nexport const runtime = 'nodejs';\n\nconst isProd = process.env.SQUARE_ENVIRONMENT === 'production';\nconst BASE = isProd\n  ? 'https://connect.squareup.com/v2'\n  : 'https://connect.squareupsandbox.com/v2';\n\nconst headers = {\n  Authorization: `Bearer ${process.env.SQUARE_ACCESS_TOKEN ?? ''}`,\n  'Content-Type': 'application/json',\n  'Square-Version': '2024-07-17',\n};\n\ntype CartPayload = {\n  items: Array<{ variationId?: string; id?: string; qty: number; note?: string }>;\n  redirectUrl?: string;\n};\n\nexport async function POST(req: Request) {\n  try {\n    const ct = req.headers.get('content-type') || '';\n    let line_items: any[] = [];\n    let redirectUrl: string | undefined;\n\n    if (ct.includes('application/json')) {\n      // JSON (optional — you’re using form mode below, but we keep both)\n      const payload = (await req.json()) as CartPayload;\n      redirectUrl = payload.redirectUrl ?? undefined;\n      line_items = (payload.items ?? []).map((i) => ({\n        catalog_object_id: i.variationId || i.id,\n        quantity: String(Math.max(1, Number(i.qty) || 1)),\n        note: i.note,\n      }));\n    } else {\n      // FORM mode (used by the cart + “Buy Now”)\n      const form = await req.formData();\n\n      // 3A) Whole cart as JSON string (what your cart page posts)\n      const payloadStr = (form.get('payload') as string) || '';\n      if (payloadStr) {\n        const payload = JSON.parse(payloadStr) as CartPayload;\n        redirectUrl = payload.redirectUrl ?? undefined;\n        line_items = (payload.items ?? []).map((i) => ({\n          catalog_object_id: i.variationId || i.id,\n          quantity: String(Math.max(1, Number(i.qty) || 1)),\n          note: i.note,\n        }));\n      } else {\n        // 3B) Single-item “Buy Now” fallback\n        const id = String(form.get('variationId') || form.get('id') || '').trim();\n        const qty = Number(form.get('qty') || 1);\n        const note = String(form.get('note') || '');\n        redirectUrl = (form.get('redirectUrl') as string) || undefined;\n\n        if (!id) {\n          return NextResponse.json(\n            { error: 'Missing item id/variationId' },\n            { status: 400 }\n          );\n        }\n        line_items = [\n          {\n            catalog_object_id: id,\n            quantity: String(Math.max(1, qty)),\n            note,\n          },\n        ];\n      }\n    }\n\n    if (!line_items.length) {\n      return NextResponse.json(\n        { error: 'No items provided for checkout' },\n        { status: 400 }\n      );\n    }\n\n    const body = {\n      idempotency_key: crypto.randomUUID(),\n      order: {\n        location_id: process.env.SQUARE_LOCATION_ID,\n        line_items,\n      },\n      checkout_options: {\n        ask_for_shipping_address: true,\n        redirect_url:\n          redirectUrl ??\n          (process.env.NEXT_PUBLIC_BASE_URL\n            ? `${process.env.NEXT_PUBLIC_BASE_URL}/thanks`\n            : undefined),\n      },\n    };\n\n    const res = await fetch(`${BASE}/online-checkout/payment-links`, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    const data = await res.json();\n    if (!res.ok) return NextResponse.json({ error: data }, { status: res.status });\n\n    const url = data?.payment_link?.url;\n    if (!url) {\n      return NextResponse.json({ error: 'No checkout URL returned' }, { status: 500 });\n    }\n\n    return NextResponse.redirect(url, { status: 303 });\n  } catch (e: any) {\n    return NextResponse.json({ error: e?.message ?? 'Unknown error' }, { status: 500 });\n  }\n}","size_bytes":3567},"app/api/products/route.ts":{"content":"// app/api/products/route.ts\nimport { NextResponse } from 'next/server';\n\nexport const runtime = 'nodejs';\n\nconst isProd = process.env.SQUARE_ENVIRONMENT === 'production';\nconst HAS_SQUARE = !!process.env.SQUARE_ACCESS_TOKEN;\nconst BASE = isProd\n  ? 'https://connect.squareup.com/v2'\n  : 'https://connect.squareupsandbox.com/v2';\n\nconst headers: Record<string, string> = {\n  Authorization: `Bearer ${process.env.SQUARE_ACCESS_TOKEN ?? ''}`,\n  'Content-Type': 'application/json',\n  'Square-Version': '2024-07-17',\n};\n\nfunction centsToDollars(a?: number | null) {\n  return typeof a === 'number' ? a / 100 : null;\n}\n\ntype Related = Array<any> | undefined;\n\nfunction buildImageMap(related: Related) {\n  const map = new Map<string, string>();\n  for (const r of related ?? []) {\n    if (r?.type === 'IMAGE' && r?.id && r?.image_data?.url) {\n      map.set(r.id, r.image_data.url);\n    }\n  }\n  return map;\n}\n\nfunction pickImageUrlFromObject(item: any, images: Map<string, string>): string | null {\n  const itemImgId = item?.item_data?.image_ids?.[0];\n  if (itemImgId && images.has(itemImgId)) return images.get(itemImgId)!;\n\n  const v0 = item?.item_data?.variations?.[0]?.item_variation_data;\n  const varImgId = v0?.image_ids?.[0];\n  if (varImgId && images.has(varImgId)) return images.get(varImgId)!;\n\n  return null;\n}\n\nfunction normalizeSingleItem(item: any, related: Related) {\n  const images = buildImageMap(related);\n  const variations = (item?.item_data?.variations ?? []).map((v: any) => {\n    const vd = v?.item_variation_data;\n    return {\n      id: v?.id,\n      name: vd?.name ?? 'Default',\n      price: centsToDollars(vd?.price_money?.amount),\n      currency: vd?.price_money?.currency ?? 'USD',\n      image:\n        vd?.image_ids?.[0] && images.get(vd.image_ids[0])\n          ? images.get(vd.image_ids[0])!\n          : null,\n    };\n  });\n\n  let image = pickImageUrlFromObject(item, images);\n  if (!image && variations.length && variations[0].image) {\n    image = variations[0].image;\n  }\n\n  return {\n    id: item?.id,\n    name: item?.item_data?.name ?? '',\n    description: item?.item_data?.description ?? '',\n    price: variations[0]?.price ?? null,\n    currency: variations[0]?.currency ?? 'USD',\n    image,\n    variations,\n  };\n}\n\n/** Get a single item (used for detail page and list backfill) */\nasync function getItemById(id: string) {\n  const res = await fetch(\n    `${BASE}/catalog/object/${encodeURIComponent(id)}?include_related_objects=true`,\n    { headers, cache: 'no-store' }\n  );\n  if (!res.ok) throw new Error(await res.text());\n  const data = await res.json();\n  return normalizeSingleItem(data.object, data.related_objects);\n}\n\n/** List items using Search Catalog Items (for image_url), then backfill missing fields via catalog/object */\nasync function listItemsRobust() {\n  // Try to respect the configured location if provided (can help Sandbox)\n  const body: any = {};\n  if (process.env.SQUARE_LOCATION_ID) {\n    body.enabled_location_ids = [process.env.SQUARE_LOCATION_ID];\n  }\n\n  const res = await fetch(`${BASE}/catalog/search-catalog-items`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body),\n    cache: 'no-store',\n  });\n\n  if (!res.ok) throw new Error(await res.text());\n  const data = await res.json();\n\n  // Initial pass from search-catalog-items\n  const initial: Array<{\n    id: string;\n    name?: string;\n    description?: string;\n    price?: number | null;\n    currency?: string;\n    image?: string | null;\n  }> = (data.items ?? []).map((i: any) => {\n    const v0 = i?.variations?.[0]?.item_variation_data;\n    return {\n      id: i?.id,\n      name: i?.name ?? '',\n      description: i?.description ?? '',\n      price: centsToDollars(v0?.price_money?.amount),\n      currency: v0?.price_money?.currency ?? 'USD',\n      image: i?.image_url ?? null,\n    };\n  });\n\n  // Backfill any items that are missing critical fields (name or price or image)\n  const needsBackfill = initial.filter(\n    (x) => !x?.name || x.name.trim() === '' || x.price == null || !x.image\n  );\n\n  if (needsBackfill.length === 0) return initial;\n\n  const byId = new Map(initial.map((x) => [x.id, x]));\n\n  await Promise.all(\n    needsBackfill.map(async (x) => {\n      try {\n        const filled = await getItemById(x.id);\n        const merged = {\n          id: filled.id,\n          name: filled.name || x.name || '',\n          description: filled.description || x.description || '',\n          price: filled.price ?? x.price ?? null,\n          currency: filled.currency || x.currency || 'USD',\n          image: filled.image ?? x.image ?? null,\n        };\n        byId.set(x.id, merged);\n      } catch {\n        // If backfill fails, keep the original (at least shows something)\n      }\n    })\n  );\n\n  return Array.from(byId.values());\n}\n\n/* ----------------------------- GET ----------------------------- */\n\nexport async function GET(req: Request) {\n  const url = new URL(req.url);\n  const id = url.searchParams.get('id');\n\n  try {\n    // Light mock mode when no Square credentials are present\n    if (!HAS_SQUARE) {\n      const MOCK: any[] = [\n        {\n          id: 'mock-1',\n          name: 'Chocolate Chunk Cookies',\n          description: 'Crispy edges, gooey center, lots of chocolate.',\n          price: 3.5,\n          currency: 'USD',\n          image: '/chocolate-chunk-cookies.jpeg',\n        },\n        {\n          id: 'mock-2',\n          name: 'Cinnamon Rolls',\n          description: 'Soft rolls with brown sugar cinnamon and glaze.',\n          price: 4.25,\n          currency: 'USD',\n          image: '/3DED26DC-832D-46F6-957D-830F1EBB3331_4_5005_c.jpeg',\n        },\n        {\n          id: 'mock-3',\n          name: 'Blueberry Muffin',\n          description: 'Bursting with berries and lemon zest.',\n          price: 3.0,\n          currency: 'USD',\n          image: '/282FFA65-692C-461D-8B67-9AFA5514ABE1_4_5005_c.jpeg',\n        },\n        {\n          id: 'mock-4',\n          name: 'Apple Pie Slice',\n          description: 'Buttery crust with spiced apples.',\n          price: 4.5,\n          currency: 'USD',\n          image: '/A12FD468-BF4B-4089-91FC-AB08BB6D13EF_4_5005_c.jpeg',\n        },\n        {\n          id: 'mock-5',\n          name: 'Brownies',\n          description: 'Fudgy chocolate brownies with flake salt.',\n          price: 3.75,\n          currency: 'USD',\n          image: '/77DB1324-FF2E-471E-940B-6E714614DA23_4_5005_c.jpeg',\n        },\n        {\n          id: 'mock-6',\n          name: 'Banana Bread',\n          description: 'Moist, buttery loaf with toasted walnuts.',\n          price: 5.0,\n          currency: 'USD',\n          image: '/63A58EBB-29B9-4B83-8973-6112DC671710_4_5005_c.jpeg',\n        },\n        {\n          id: 'mock-7',\n          name: 'Lemon Bar',\n          description: 'Tart lemon curd on shortbread crust.',\n          price: 3.25,\n          currency: 'USD',\n          image: '/0036B461-78BB-4046-BC65-41651D60DB18_4_5005_c.jpeg',\n        },\n        {\n          id: 'mock-8',\n          name: 'Chocolate Cake Slice',\n          description: 'Rich chocolate layers with ganache.',\n          price: 5.5,\n          currency: 'USD',\n          image: '/8E56CCAD-C999-44CF-8302-34365D17E5D4_4_5005_c.jpeg',\n        },\n      ];\n\n      if (id) {\n        const item = MOCK.find((m) => m.id === id);\n        return NextResponse.json({ item: item ?? null });\n      }\n\n      return NextResponse.json({ items: MOCK });\n    }\n\n    if (id) {\n      const item = await getItemById(id);\n      return NextResponse.json({ item });\n    }\n\n    const items = await listItemsRobust();\n    return NextResponse.json({ items });\n  } catch (e: any) {\n    console.error('[Square API error]', e);\n    return NextResponse.json(\n      { error: e?.message ?? 'Unknown error' },\n      { status: 500 }\n    );\n  }\n}\n","size_bytes":7747},"app/api/sanityhealth/route.ts":{"content":"import { NextResponse } from 'next/server';\nimport { sanity, isSanityEnabled } from '@/lib/sanity';\n\nexport const runtime = 'nodejs';\n\nfunction normalize(v?: string | null) {\n  if (!v) return '';\n  const t = v.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n  return t;\n}\n\nexport async function GET() {\n  const projectId = normalize(process.env.SANITY_PROJECT_ID);\n  const dataset = normalize(process.env.SANITY_DATASET);\n\n  const idOk = /^[a-z0-9-]+$/.test(projectId);\n  const dsOk = /^[a-z0-9-]+$/.test(dataset);\n\n  let fetchOk = false;\n  let sampleId: string | null = null;\n  let errorMsg: string | undefined;\n\n  if (isSanityEnabled) {\n    try {\n      const sample = await sanity.fetch(\"*[_type=='page'][0]{_id}\");\n      sampleId = sample?._id ?? null;\n      fetchOk = true;\n    } catch (e: any) {\n      fetchOk = false;\n      errorMsg = e?.message ?? 'Fetch failed';\n    }\n  }\n\n  return NextResponse.json({\n    configured: isSanityEnabled,\n    env: {\n      projectIdPresent: Boolean(projectId),\n      datasetPresent: Boolean(dataset),\n      projectIdValid: idOk,\n      datasetValid: dsOk,\n    },\n    fetch: {\n      ok: fetchOk,\n      sampleId,\n      error: errorMsg,\n    },\n  });\n}\n\n","size_bytes":1199},"app/api/squarehealth/route.ts":{"content":"import { NextResponse } from 'next/server';\n\nexport const runtime = 'nodejs';\n\nfunction normalize(v?: string | null) {\n  if (!v) return '';\n  const t = v.trim().replace(/^\"(.*)\"$/, '$1').replace(/^'(.*)'$/, '$1');\n  return t;\n}\n\nexport async function GET() {\n  const accessToken = normalize(process.env.SQUARE_ACCESS_TOKEN);\n  const env = normalize(process.env.SQUARE_ENVIRONMENT) || 'sandbox';\n  const locationId = normalize(process.env.SQUARE_LOCATION_ID);\n\n  const isProd = env === 'production';\n  const BASE = isProd\n    ? 'https://connect.squareup.com/v2'\n    : 'https://connect.squareupsandbox.com/v2';\n\n  const headers: Record<string, string> = {\n    Authorization: accessToken ? `Bearer ${accessToken}` : '',\n    'Content-Type': 'application/json',\n    'Square-Version': '2024-07-17',\n  };\n\n  const configured = Boolean(accessToken) && (env === 'production' || env === 'sandbox');\n\n  let fetchOk = false;\n  let status: number | null = null;\n  let error: string | undefined;\n  let locations: number | undefined;\n  let sampleItemId: string | null = null;\n\n  if (configured) {\n    try {\n      // 1) Quick auth check via Locations API\n      const locRes = await fetch(`${BASE}/locations`, { headers, cache: 'no-store' });\n      status = locRes.status;\n      if (!locRes.ok) {\n        const text = await locRes.text();\n        throw new Error(`Locations error (${locRes.status}): ${text}`);\n      }\n      const locData = await locRes.json();\n      locations = Array.isArray(locData?.locations) ? locData.locations.length : 0;\n\n      // 2) Best-effort: try to read 1 catalog item (won't fail health if empty)\n      try {\n        const catRes = await fetch(`${BASE}/catalog/list?types=ITEM&limit=1`, {\n          headers,\n          cache: 'no-store',\n        });\n        if (catRes.ok) {\n          const catData = await catRes.json();\n          sampleItemId = catData?.objects?.[0]?.id ?? null;\n        }\n      } catch {\n        // ignore secondary check\n      }\n\n      fetchOk = true;\n    } catch (e: any) {\n      fetchOk = false;\n      error = e?.message ?? 'Fetch failed';\n    }\n  }\n\n  return NextResponse.json({\n    configured,\n    env: {\n      environment: isProd ? 'production' : env === 'sandbox' ? 'sandbox' : 'unknown',\n      accessTokenPresent: Boolean(accessToken),\n      locationIdPresent: Boolean(locationId),\n    },\n    fetch: {\n      ok: fetchOk,\n      status,\n      locations,\n      sampleItemId,\n      error,\n    },\n  });\n}\n\n","size_bytes":2442},"app/products/[id]/page.tsx":{"content":"// app/products/[id]/page.tsx\nimport Image from 'next/image';\nimport AddToCartClient from '@/components/AddToCartClient';\nimport { formatMoney } from '@/lib/money';\nimport { headers } from 'next/headers';\n\nexport const dynamic = 'force-dynamic'; // avoid static paths generation in dev\n\ntype Variation = {\n  id: string;\n  name: string;\n  price?: number | string | null;\n  currency?: string;\n};\n\ntype Product = {\n  id: string;\n  name: string;\n  description?: string;\n  price?: number | string | null;\n  currency?: string;\n  image?: string | null;\n  variations?: Variation[];\n};\n\nasync function fetchProduct(id: string): Promise<Product | null> {\n  // Build an absolute base URL from the request headers\n  const h = headers();\n  const host = h.get('x-forwarded-host') ?? h.get('host') ?? 'localhost:5000';\n  const proto =\n    h.get('x-forwarded-proto') ??\n    (host.includes('localhost') || host.startsWith('127.') ? 'http' : 'https');\n\n  const base = `${proto}://${host}`;\n\n  const res = await fetch(`${base}/api/products?id=${encodeURIComponent(id)}`, {\n    cache: 'no-store',\n  });\n  if (!res.ok) return null;\n  const data = await res.json();\n  return (data?.item ?? null) as Product | null;\n}\n\nexport default async function ProductPage({ params }: { params: { id: string } }) {\n  const product = await fetchProduct(params.id);\n  if (!product) {\n    return (\n      <section className=\"container py-16\">\n        <p>Product not found.</p>\n      </section>\n    );\n  }\n\n  const variations: Variation[] =\n    product.variations?.length\n      ? product.variations\n      : [\n          {\n            id: product.id,\n            name: 'Default',\n            price: product.price ?? 0,\n            currency: product.currency ?? 'USD',\n          },\n        ];\n\n  const price = Number(variations[0]?.price ?? product.price ?? 0);\n  const currency = variations[0]?.currency ?? product.currency ?? 'USD';\n\n  return (\n    <section className=\"container py-10\">\n      <div className=\"grid md:grid-cols-2 gap-8\">\n        <div className=\"relative w-full aspect-square rounded-xl overflow-hidden bg-accent/10\">\n          {product.image ? (\n            <Image\n              src={product.image}\n              alt={product.name}\n              fill\n              className=\"object-cover\"\n              sizes=\"(min-width:1024px) 40vw, 90vw\"\n              priority\n              style={{ objectFit: 'cover' }}\n            />\n          ) : (\n            <div className=\"grid place-items-center h-full opacity-60\">No image</div>\n          )}\n        </div>\n\n        <div>\n          <h1 className=\"text-3xl font-bold mb-2\">{product.name}</h1>\n          {product.description && (\n            <p className=\"opacity-80 mb-4\">{product.description}</p>\n          )}\n\n          {/* Price display */}\n          <p className=\"text-xl font-semibold mb-4\">\n            {formatMoney ? formatMoney(price, currency) : `${currency} ${price.toFixed(2)}`}\n          </p>\n\n          {/* Client cart controls */}\n          <AddToCartClient product={product} variations={variations} />\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":3088},"app/contact/page.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\n\nexport default function ContactPage() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    subject: '',\n    message: '',\n    orderType: ''\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    setIsSubmitting(false);\n    setIsSubmitted(true);\n    \n    // Reset form after showing success message\n    setTimeout(() => {\n      setIsSubmitted(false);\n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        subject: '',\n        message: '',\n        orderType: ''\n      });\n    }, 3000);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  if (isSubmitted) {\n    return (\n      <div className=\"pt-8\">\n        <section className=\"container py-16\">\n          <div className=\"max-w-2xl mx-auto text-center\">\n            <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </div>\n            <h1 className=\"text-3xl font-bold gradient-text mb-4\" style={{lineHeight: '1.2', paddingBottom: '0.25rem'}}>Thank You!</h1>\n            <p className=\"text-gray-600 text-lg\">\n              We've received your message and will get back to you soon. \n              We look forward to helping you with your bakery needs!\n            </p>\n          </div>\n        </section>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pt-8\">\n      <section className=\"container py-16\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold gradient-text mb-6\" style={{lineHeight: '1.2', paddingBottom: '0.25rem'}}>Contact Us</h1>\n          <p className=\"text-gray-600 max-w-2xl mx-auto text-lg\">\n            Have questions about our products or want to place a custom order? \n            We'd love to hear from you! Fill out the form below and we'll get back to you as soon as possible.\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12 max-w-6xl mx-auto\">\n          {/* Contact Form */}\n          <div className=\"card p-8\">\n            <h2 className=\"text-2xl font-semibold mb-6 text-brand\">Send us a Message</h2>\n            \n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Full Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                    className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-colors duration-200\"\n                    placeholder=\"Your name\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Address *\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={handleChange}\n                    className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-colors duration-200\"\n                    placeholder=\"your@email.com\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone Number\n                  </label>\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-colors duration-200\"\n                    placeholder=\"(555) 123-4567\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"orderType\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Inquiry Type\n                  </label>\n                  <select\n                    id=\"orderType\"\n                    name=\"orderType\"\n                    value={formData.orderType}\n                    onChange={handleChange}\n                    className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-colors duration-200\"\n                  >\n                    <option value=\"\">Select an option</option>\n                    <option value=\"general\">General Question</option>\n                    <option value=\"custom-cake\">Custom Cake Order</option>\n                    <option value=\"bulk-order\">Bulk Order</option>\n                    <option value=\"catering\">Catering Inquiry</option>\n                    <option value=\"pickup\">Pickup Question</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Subject *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  required\n                  value={formData.subject}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-colors duration-200\"\n                  placeholder=\"What can we help you with?\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Message *\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  required\n                  rows={5}\n                  value={formData.message}\n                  onChange={handleChange}\n                  className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-colors duration-200 resize-vertical\"\n                  placeholder=\"Tell us more about your request...\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className={`w-full btn btn-brand py-4 text-lg font-semibold ${\n                  isSubmitting ? 'opacity-70 cursor-not-allowed' : 'hover:shadow-xl transform hover:-translate-y-0.5'\n                } transition-all duration-200`}\n              >\n                {isSubmitting ? (\n                  <span className=\"flex items-center justify-center gap-2\">\n                    <svg className=\"w-5 h-5 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                    </svg>\n                    Sending Message...\n                  </span>\n                ) : (\n                  'Send Message'\n                )}\n              </button>\n            </form>\n          </div>\n\n          {/* Contact Information */}\n          <div className=\"space-y-8\">\n            <div className=\"card p-8\">\n              <h2 className=\"text-2xl font-semibold mb-6 text-brand\">Get In Touch</h2>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-brand/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <svg className=\"w-6 h-6 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-1\">Address</h3>\n                    <p className=\"text-gray-600\">Austin, Texas</p>\n                  </div>\n                </div>\n\n\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-brand/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <svg className=\"w-6 h-6 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-1\">Email</h3>\n                    <p className=\"text-gray-600\">hello@biglous.example</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-brand/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <svg className=\"w-6 h-6 text-brand\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-1\">Phone</h3>\n                    <p className=\"text-gray-600\">(555) 123-BAKE</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card p-8 bg-gradient-to-br from-green-50 to-emerald-50 border-brand/20\">\n              <h3 className=\"text-xl font-semibold mb-4 text-brand\">Custom Orders</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Planning something special? We create custom cakes and treats for birthdays, \n                weddings, and special occasions.\n              </p>\n              <ul className=\"text-sm text-gray-600 space-y-2\">\n                <li className=\"flex items-center gap-2\">\n                  <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                  48-hour notice for custom cakes\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                  Free consultation for large orders\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                  Delivery available for large orders\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":13033},"app/studio/[[...index]]/page.tsx":{"content":"'use client'\n\nimport { NextStudio } from 'next-sanity/studio'\nimport config from '../../../sanity/sanity.config'\n\nexport default function StudioPage() {\n  return <NextStudio config={config} />\n}","size_bytes":194},"sanity/env.ts":{"content":"export const apiVersion = process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2024-07-01'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}","size_bytes":523},"sanity/sanity.cli.ts":{"content":"import { defineCliConfig } from 'sanity/cli'\n\nexport default defineCliConfig({\n  api: {\n    projectId: process.env.SANITY_STUDIO_PROJECT_ID || '',\n    dataset: process.env.SANITY_STUDIO_DATASET || 'production'\n  }\n})","size_bytes":216},"sanity/sanity.config.ts":{"content":"import { defineConfig } from 'sanity'\nimport { deskTool } from 'sanity/desk'\nimport { visionTool } from '@sanity/vision'\n\nimport { schemaTypes } from './schemas'\n\nexport default defineConfig({\n  name: 'big-lous-bakery',\n  title: \"Big Lou's Bakery CMS\",\n\n  projectId: process.env.SANITY_STUDIO_PROJECT_ID || '',\n  dataset: process.env.SANITY_STUDIO_DATASET || 'production',\n\n  plugins: [\n    deskTool({\n      structure: (S) =>\n        S.list()\n          .title('Content')\n          .items([\n            S.listItem()\n              .title('Pages')\n              .child(\n                S.documentTypeList('page')\n                  .title('Pages')\n              ),\n            S.divider(),\n            S.listItem()\n              .title('FAQ Items')\n              .child(\n                S.documentTypeList('faqItem')\n                  .title('FAQ Items')\n                  .defaultOrdering([{ field: 'order', direction: 'asc' }])\n              )\n          ])\n    }),\n    visionTool()\n  ],\n\n  schema: {\n    types: schemaTypes,\n  },\n})","size_bytes":1029},"sanity/schemas/faqItem.ts":{"content":"export default {\n  name: 'faqItem',\n  title: 'FAQ Item',\n  type: 'document',\n  fields: [\n    {\n      name: 'order',\n      title: 'Order',\n      type: 'number',\n      description: 'Order in which this FAQ item should appear'\n    },\n    {\n      name: 'question',\n      title: 'Question',\n      type: 'string',\n      validation: (Rule: any) => Rule.required()\n    },\n    {\n      name: 'answer',\n      title: 'Answer',\n      type: 'text',\n      rows: 4,\n      validation: (Rule: any) => Rule.required()\n    }\n  ],\n  orderings: [\n    {\n      title: 'Order',\n      name: 'orderAsc',\n      by: [\n        { field: 'order', direction: 'asc' }\n      ]\n    }\n  ],\n  preview: {\n    select: {\n      title: 'question',\n      subtitle: 'order'\n    },\n    prepare(selection: any) {\n      const { title, subtitle } = selection\n      return {\n        title,\n        subtitle: subtitle ? `Order: ${subtitle}` : 'No order set'\n      }\n    }\n  }\n}","size_bytes":926},"sanity/schemas/index.ts":{"content":"import page from './page'\nimport faqItem from './faqItem'\n\nexport const schemaTypes = [page, faqItem]","size_bytes":101},"sanity/schemas/page.ts":{"content":"export default {\n  name: 'page',\n  title: 'Page',\n  type: 'document',\n  fields: [\n    {\n      name: 'title',\n      title: 'Title',\n      type: 'string',\n      validation: (Rule: any) => Rule.required()\n    },\n    {\n      name: 'slug',\n      title: 'Slug',\n      type: 'slug',\n      options: {\n        source: 'title',\n        maxLength: 96\n      },\n      validation: (Rule: any) => Rule.required()\n    },\n    {\n      name: 'content',\n      title: 'Content',\n      type: 'text',\n      rows: 8\n    },\n    {\n      name: 'image',\n      title: 'Featured Image',\n      type: 'image',\n      options: {\n        hotspot: true\n      }\n    }\n  ],\n  preview: {\n    select: {\n      title: 'title',\n      media: 'image'\n    }\n  }\n}","size_bytes":717},"app/api/instagram/route.ts":{"content":"import { NextResponse } from 'next/server';\n\n// Placeholder Instagram feed data\nconst MOCK_INSTAGRAM_POSTS = [\n  {\n    id: '1',\n    image_url: 'https://images.unsplash.com/photo-1578985545062-69928b1d9587?w=400&h=400&fit=crop&crop=center',\n    caption: 'Fresh out of the oven! Our signature chocolate chip cookies are ready to make your day sweeter 🍪✨',\n    permalink: 'https://www.instagram.com/p/mock1/',\n    timestamp: '2024-09-06T10:30:00+0000',\n    like_count: 124,\n    comments_count: 8\n  },\n  {\n    id: '2',\n    image_url: 'https://images.unsplash.com/photo-1563729784474-d77dbb933a9e?w=400&h=400&fit=crop&crop=center',\n    caption: 'Custom birthday cake perfection! 🎂 Nothing makes us happier than celebrating life\\'s special moments with you.',\n    permalink: 'https://www.instagram.com/p/mock2/',\n    timestamp: '2024-09-05T14:15:00+0000',\n    like_count: 89,\n    comments_count: 12\n  },\n  {\n    id: '3',\n    image_url: 'https://images.unsplash.com/photo-1509440159596-0249088772ff?w=400&h=400&fit=crop&crop=center',\n    caption: 'Behind the scenes: Our bakers start at 5 AM to bring you the freshest pastries every morning! 👨‍🍳💪',\n    permalink: 'https://www.instagram.com/p/mock3/',\n    timestamp: '2024-09-04T06:45:00+0000',\n    like_count: 156,\n    comments_count: 15\n  },\n  {\n    id: '4',\n    image_url: 'https://images.unsplash.com/photo-1565958011703-44f9829ba187?w=400&h=400&fit=crop&crop=center',\n    caption: 'Apple season is here! 🍎 Try our famous apple cinnamon muffins made with locally sourced apples.',\n    permalink: 'https://www.instagram.com/p/mock4/',\n    timestamp: '2024-09-03T11:20:00+0000',\n    like_count: 92,\n    comments_count: 6\n  },\n  {\n    id: '5',\n    image_url: 'https://images.unsplash.com/photo-1557925923-cd4648e211a0?w=400&h=400&fit=crop&crop=center',\n    caption: 'Weekend special: Artisan sourdough bread! 🍞 Limited quantities available. Get yours while they last!',\n    permalink: 'https://www.instagram.com/p/mock5/',\n    timestamp: '2024-09-02T08:00:00+0000',\n    like_count: 78,\n    comments_count: 4\n  },\n  {\n    id: '6',\n    image_url: 'https://images.unsplash.com/photo-1571115764595-644a1f56a55c?w=400&h=400&fit=crop&crop=center',\n    caption: 'Cupcake decorating class was a success! 🧁 Thanks to everyone who joined us for a sweet afternoon of creativity.',\n    permalink: 'https://www.instagram.com/p/mock6/',\n    timestamp: '2024-09-01T16:30:00+0000',\n    like_count: 134,\n    comments_count: 18\n  }\n];\n\nexport async function GET() {\n  try {\n    // In a real implementation, you would:\n    // 1. Use Instagram Basic Display API or Instagram Graph API\n    // 2. Authenticate with access tokens\n    // 3. Fetch real posts from the Instagram account\n    \n    // For now, return mock data\n    return NextResponse.json({\n      data: MOCK_INSTAGRAM_POSTS,\n      success: true\n    });\n  } catch (error) {\n    console.error('Instagram API error:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch Instagram posts', success: false },\n      { status: 500 }\n    );\n  }\n}","size_bytes":3066},"components/InstagramFeed.tsx":{"content":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\n\ninterface InstagramPost {\n  id: string;\n  image_url: string;\n  caption: string;\n  permalink: string;\n  timestamp: string;\n  like_count: number;\n  comments_count: number;\n}\n\nexport default function InstagramFeed() {\n  const [posts, setPosts] = useState<InstagramPost[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/api/instagram');\n        const data = await response.json();\n        \n        if (data.success) {\n          setPosts(data.data.slice(0, 6)); // Show only 6 posts\n        }\n      } catch (error) {\n        console.error('Failed to fetch Instagram posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  if (loading) {\n    return (\n      <section className=\"py-16 bg-gradient-to-br from-green-50/50 to-emerald-50/30\">\n        <div className=\"container\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold gradient-text mb-4\">\n              Follow Our Journey\n            </h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto\">\n              See what's fresh from our ovens on Instagram\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"aspect-square bg-gray-200 rounded-xl animate-pulse\"></div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-16 bg-gradient-to-br from-green-50/50 to-emerald-50/30\">\n      <div className=\"container\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold gradient-text mb-4\">\n            Follow Our Journey\n          </h2>\n          <p className=\"text-gray-600 max-w-2xl mx-auto mb-6\">\n            See what's fresh from our ovens on Instagram\n          </p>\n          \n          {/* Social Media Links */}\n          <div className=\"flex items-center justify-center gap-4\">\n            <a\n              href=\"https://www.instagram.com/biglousbakery\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-pink-500 to-purple-600 text-white rounded-xl hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/>\n              </svg>\n              @biglousbakery\n            </a>\n            \n            <a\n              href=\"https://www.tiktok.com/@biglousbakery\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center gap-2 px-6 py-3 bg-black text-white rounded-xl hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M19.59 6.69a4.83 4.83 0 0 1-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 0 1-5.2 1.74 2.89 2.89 0 0 1 2.31-4.64 2.93 2.93 0 0 1 .88.13V9.4a6.84 6.84 0 0 0-.88-.05A6.33 6.33 0 0 0 5 20.1a6.34 6.34 0 0 0 10.86-4.43v-7a8.16 8.16 0 0 0 4.77 1.52v-3.4a4.85 4.85 0 0 1-1-.1z\"/>\n              </svg>\n              @biglousbakery\n            </a>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n          {posts.map((post, index) => (\n            <a\n              key={post.id}\n              href={post.permalink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"group relative aspect-square overflow-hidden rounded-xl bg-gray-100 hover:shadow-xl transition-all duration-300 animate-fade-in\"\n              style={{ animationDelay: `${index * 100}ms` }}\n            >\n              <Image\n                src={post.image_url}\n                alt={post.caption}\n                fill\n                className=\"object-cover group-hover:scale-110 transition-transform duration-300\"\n                sizes=\"(max-width: 768px) 50vw, (max-width: 1024px) 33vw, 16vw\"\n                loading=\"lazy\"\n                style={{ objectFit: 'cover' }}\n              />\n              \n              {/* Overlay with engagement stats */}\n              <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/40 transition-all duration-300 flex items-center justify-center\">\n                <div className=\"text-white text-center opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center gap-1\">\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n                      </svg>\n                      <span className=\"text-sm font-medium\">{post.like_count}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M21.99 4c0-1.1-.89-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM18 14H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\n                      </svg>\n                      <span className=\"text-sm font-medium\">{post.comments_count}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </a>\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-8\">\n          <a\n            href=\"https://www.instagram.com/biglousbakery\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"btn btn-brand\"\n          >\n            View More on Instagram\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7337},"components/ProductFilter.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\n\ninterface ProductFilterProps {\n  categories: string[];\n  selectedCategory: string;\n  onCategoryChange: (category: string) => void;\n  productCount: number;\n}\n\nexport default function ProductFilter({ \n  categories, \n  selectedCategory, \n  onCategoryChange, \n  productCount \n}: ProductFilterProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"mb-8\">\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 mb-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold gradient-text\">Our Products</h2>\n          <p className=\"text-gray-600\">\n            {productCount} {productCount === 1 ? 'product' : 'products'} \n            {selectedCategory !== 'All' && ` in ${selectedCategory}`}\n          </p>\n        </div>\n\n        {/* Mobile Filter Toggle */}\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className=\"sm:hidden btn btn-outline flex items-center gap-2\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\" />\n          </svg>\n          Filter Categories\n          <svg className={`w-4 h-4 transition-transform duration-200 ${isOpen ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Category Filter Pills */}\n      <div className={`${isOpen ? 'block' : 'hidden'} sm:block`}>\n        <div className=\"flex flex-wrap gap-3\">\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => {\n                onCategoryChange(category);\n                setIsOpen(false);\n              }}\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 ${\n                selectedCategory === category\n                  ? 'bg-brand text-white shadow-md transform scale-105'\n                  : 'bg-gray-100 text-gray-700 hover:bg-brand/10 hover:text-brand hover:shadow-sm'\n              }`}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":2524},"app/about/layout.tsx":{"content":"import { Metadata } from 'next';\n\nexport const metadata: Metadata = {\n  title: 'About Us - Our Story & Baking Tradition',\n  description: 'Learn about Big Lou\\'s Bakery - our story, baking traditions, and commitment to using premium ingredients and traditional methods for the finest handcrafted treats.',\n  openGraph: {\n    title: 'About Us - Our Story & Baking Tradition',\n    description: 'Learn about Big Lou\\'s Bakery - our story, baking traditions, and commitment to quality.',\n  },\n};\n\nexport default function AboutLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <>{children}</>;\n}","size_bytes":608},"app/contact/layout.tsx":{"content":"import { Metadata } from 'next';\n\nexport const metadata: Metadata = {\n  title: 'Contact Us - Get in Touch for Custom Orders',\n  description: 'Contact Big Lou\\'s Bakery for custom cake orders, catering inquiries, and general questions. We\\'re here to help with all your bakery needs.',\n  openGraph: {\n    title: 'Contact Us - Get in Touch for Custom Orders',\n    description: 'Contact Big Lou\\'s Bakery for custom cake orders, catering inquiries, and general questions.',\n  },\n};\n\nexport default function ContactLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <>{children}</>;\n}","size_bytes":598},"app/shop/layout.tsx":{"content":"import { Metadata } from 'next';\n\nexport const metadata: Metadata = {\n  title: 'Shop All Products - Browse Our Complete Bakery Collection',\n  description: 'Browse our complete collection of fresh-baked goods including cookies, cakes, pastries, breads, and more. Filter by category to find your perfect treat.',\n  openGraph: {\n    title: 'Shop All Products - Browse Our Complete Bakery Collection',\n    description: 'Browse our complete collection of fresh-baked goods including cookies, cakes, pastries, breads, and more.',\n  },\n};\n\nexport default function ShopLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <>{children}</>;\n}","size_bytes":648},"components/NewsletterSignup.tsx":{"content":"'use client';\n\nimport { useState } from 'react';\n\nexport default function NewsletterSignup() {\n  const [email, setEmail] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    \n    if (!email || !email.includes('@')) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsSubmitting(true);\n    \n    try {\n      // Simulate newsletter signup\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setIsSubmitted(true);\n      setEmail('');\n      \n      // Reset success message after 5 seconds\n      setTimeout(() => {\n        setIsSubmitted(false);\n      }, 5000);\n    } catch (err) {\n      setError('Something went wrong. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isSubmitted) {\n    return (\n      <section className=\"py-16 bg-gradient-to-br from-brand/5 to-green-50/50\">\n        <div className=\"container\">\n          <div className=\"max-w-2xl mx-auto text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </div>\n            <h3 className=\"text-2xl font-bold gradient-text mb-3\">Welcome to our family! 🎉</h3>\n            <p className=\"text-gray-600 text-lg\">\n              You're now subscribed to receive our freshest updates, special offers, and behind-the-scenes content.\n            </p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-16 bg-gradient-to-br from-brand/5 to-green-50/50\">\n      <div className=\"container\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"card p-8 md:p-12 bg-gradient-to-br from-white/95 to-green-50/50 border border-brand/10\">\n            <div className=\"grid md:grid-cols-2 gap-8 items-center\">\n              {/* Content Side */}\n              <div className=\"text-center md:text-left\">\n                <h3 className=\"text-3xl lg:text-4xl font-bold gradient-text mb-4\">\n                  Stay Sweet with Us! 🍪\n                </h3>\n                <p className=\"text-gray-600 text-lg mb-6 leading-relaxed\">\n                  Be the first to know about our seasonal specials, new treats, and exclusive offers. \n                  Plus, get behind-the-scenes content from our kitchen!\n                </p>\n                \n                <div className=\"flex flex-wrap gap-4 justify-center md:justify-start text-sm text-gray-600 mb-6\">\n                  <div className=\"flex items-center gap-2\">\n                    <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span>Weekly specials</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span>Recipe tips</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                    </svg>\n                    <span>Exclusive discounts</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Form Side */}\n              <div>\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                  <div className=\"relative\">\n                    <input\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      placeholder=\"Enter your email address\"\n                      className={`w-full px-6 py-4 text-lg border rounded-xl focus:ring-2 focus:ring-brand/20 focus:border-brand transition-all duration-200 bg-white/80 backdrop-blur-sm ${\n                        error ? 'border-red-300 focus:ring-red/20 focus:border-red-500' : 'border-gray-200'\n                      }`}\n                      disabled={isSubmitting}\n                    />\n                    <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                      <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                      </svg>\n                    </div>\n                  </div>\n\n                  {error && (\n                    <p className=\"text-red-600 text-sm flex items-center gap-2\">\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      {error}\n                    </p>\n                  )}\n\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmitting || !email}\n                    className={`w-full py-4 px-6 text-lg font-semibold rounded-xl transition-all duration-200 ${\n                      isSubmitting || !email\n                        ? 'bg-gray-200 text-gray-400 cursor-not-allowed'\n                        : 'btn btn-brand hover:shadow-xl transform hover:-translate-y-0.5'\n                    }`}\n                  >\n                    {isSubmitting ? (\n                      <span className=\"flex items-center justify-center gap-2\">\n                        <svg className=\"w-5 h-5 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                        </svg>\n                        Subscribing...\n                      </span>\n                    ) : (\n                      <span className=\"flex items-center justify-center gap-2\">\n                        Subscribe for Sweet Updates\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                        </svg>\n                      </span>\n                    )}\n                  </button>\n\n                  <p className=\"text-xs text-gray-500 text-center\">\n                    We respect your privacy. Unsubscribe at any time.\n                  </p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7640}},"version":1}